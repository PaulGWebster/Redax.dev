{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0","program":"C:\\Users\\paulg\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tungstenite","--edition=2018","C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"native-tls\"","--cfg","feature=\"native-tls-crate\"","-C","metadata=5aff06661b389c09","-C","extra-filename=-5aff06661b389c09","--out-dir","c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libbase64-a8b435654f0f813f.rmeta","--extern","byteorder=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libbyteorder-e7872a45e409c5c7.rmeta","--extern","bytes=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libbytes-aa4b650fd26ebace.rmeta","--extern","http=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libhttp-7dc26e94adc2e15a.rmeta","--extern","httparse=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libhttparse-f5147a6a96f12cae.rmeta","--extern","input_buffer=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libinput_buffer-b2acd93a61ba6381.rmeta","--extern","log=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\liblog-762306cfa0445324.rmeta","--extern","native_tls_crate=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libnative_tls-8fc3c1b03056048c.rmeta","--extern","rand=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\librand-78fcd8ef1e04171d.rmeta","--extern","sha1=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libsha1-c96bcd43de61d652.rmeta","--extern","thiserror=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libthiserror-019a4589aea7651b.rmeta","--extern","url=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\liburl-5ad4fbe66d621bd4.rmeta","--extern","utf8=c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libutf8-cfefa7e5c4c5d983.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\paulg\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\paulg\\Documents\\project\\redax.dev\\project\\target\\rls\\debug\\deps\\libtungstenite-5aff06661b389c09.rmeta"},"prelude":{"crate_id":{"name":"tungstenite","disambiguator":[5003198530774454927,7908629574067261759]},"crate_root":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src","external_crates":[{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":13,"id":{"name":"http","disambiguator":[253129302861878686,4638318453360457123]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":14,"id":{"name":"fnv","disambiguator":[2489852198916710370,6210931132834131286]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","num":15,"id":{"name":"bytes","disambiguator":[7196057975529454472,2047189198684000506]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","num":16,"id":{"name":"itoa","disambiguator":[3952745943175287038,3083261914376456478]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":17,"id":{"name":"log","disambiguator":[11988239905312418642,14929643071484238321]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":18,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":19,"id":{"name":"url","disambiguator":[4861564704506466829,90531417543853101]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":20,"id":{"name":"matches","disambiguator":[11014272447762748173,16648359093321650840]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":21,"id":{"name":"form_urlencoded","disambiguator":[3024766702294307067,1281899634146512626]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":22,"id":{"name":"percent_encoding","disambiguator":[2805728907668164948,17987202506523671423]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":23,"id":{"name":"idna","disambiguator":[17430652402367823503,15867985309781907540]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":24,"id":{"name":"unicode_bidi","disambiguator":[15165649380447209132,13368300463009242033]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":25,"id":{"name":"unicode_normalization","disambiguator":[13653842789095296078,3712808708835134662]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":26,"id":{"name":"tinyvec","disambiguator":[254441545068744588,13939351994377385125]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":27,"id":{"name":"tinyvec_macros","disambiguator":[3740025176718053707,1767883453454209463]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":28,"id":{"name":"native_tls","disambiguator":[8973392239344782783,8777932131585509729]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":29,"id":{"name":"schannel","disambiguator":[11615878397258969012,14833952253520709312]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":30,"id":{"name":"winapi","disambiguator":[15805426264775945962,8954576425088265346]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","num":31,"id":{"name":"lazy_static","disambiguator":[15015519582684158761,6705730272629463748]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","num":32,"id":{"name":"thiserror","disambiguator":[15367411168897599248,6874614172015869113]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","num":33,"id":{"name":"thiserror_impl","disambiguator":[2579354872637716425,3459731096924843620]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":34,"id":{"name":"httparse","disambiguator":[2187462968322623730,3405900760588158552]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","num":35,"id":{"name":"input_buffer","disambiguator":[3800471075804089947,1793959254028016882]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":36,"id":{"name":"sha1","disambiguator":[7287666080589494809,3055789614656663732]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":37,"id":{"name":"digest","disambiguator":[8420029408591215556,6526532041837004713]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":38,"id":{"name":"generic_array","disambiguator":[8302656478585461764,17071084216885054081]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":39,"id":{"name":"typenum","disambiguator":[15652792641592469809,721678845083159562]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":40,"id":{"name":"block_buffer","disambiguator":[5903379417877611847,5852370236960358456]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":41,"id":{"name":"cpuid_bool","disambiguator":[15295469270832279181,6962252399455032955]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","num":42,"id":{"name":"opaque_debug","disambiguator":[8499660880243116728,8025236896612418563]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","num":43,"id":{"name":"byteorder","disambiguator":[5767004990343193212,745202885170680663]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","num":44,"id":{"name":"utf8","disambiguator":[6073462825993319306,11437324143139394446]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":45,"id":{"name":"rand","disambiguator":[13983651897414932308,882337007867497137]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":46,"id":{"name":"rand_core","disambiguator":[8408501854202348940,15326406493472181176]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":47,"id":{"name":"getrandom","disambiguator":[17319445117252420411,2247562127164021507]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":48,"id":{"name":"rand_chacha","disambiguator":[17924117009834167489,15005481712301746916]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":49,"id":{"name":"ppv_lite86","disambiguator":[13794390771410745816,13742225575859793659]}},{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","num":50,"id":{"name":"base64","disambiguator":[5086544280025110015,16259343462833000600]}}],"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":0,"byte_end":659,"line_start":1,"line_end":31,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":13,"index":0},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":306,"byte_end":310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4060,"byte_end":4070,"line_start":110,"line_end":110,"column_start":27,"column_end":37},"alias_span":null,"name":"AutoStream","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86024,"byte_end":86034,"line_start":9,"line_end":9,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":367}},{"kind":"Use","ref_id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86036,"byte_end":86041,"line_start":9,"line_end":9,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":367}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86043,"byte_end":86054,"line_start":9,"line_end":9,"column_start":42,"column_end":53},"alias_span":null,"name":"FrameHeader","value":"","parent":{"krate":0,"index":367}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":55817,"byte_end":55827,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":366}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":55838,"byte_end":55845,"line_start":7,"line_end":7,"column_start":44,"column_end":51},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":366}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129667,"byte_end":129682,"line_start":3,"line_end":3,"column_start":35,"column_end":50},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":703}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":458,"byte_end":464,"line_start":26,"line_end":26,"column_start":14,"column_end":20},"alias_span":null,"name":"client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":466,"byte_end":473,"line_start":26,"line_end":26,"column_start":22,"column_end":29},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":488,"byte_end":493,"line_start":27,"line_end":27,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":495,"byte_end":501,"line_start":27,"line_end":27,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":528,"byte_end":543,"line_start":28,"line_end":28,"column_start":25,"column_end":40},"alias_span":null,"name":"ClientHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":553,"byte_end":568,"line_start":28,"line_end":28,"column_start":50,"column_end":65},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":570,"byte_end":584,"line_start":28,"line_end":28,"column_start":67,"column_end":81},"alias_span":null,"name":"HandshakeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":602,"byte_end":609,"line_start":29,"line_end":29,"column_start":16,"column_end":23},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":611,"byte_end":620,"line_start":29,"line_end":29,"column_start":25,"column_end":34},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":636,"byte_end":642,"line_start":30,"line_end":30,"column_start":14,"column_end":20},"alias_span":null,"name":"accept","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":644,"byte_end":654,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"accept_hdr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":0,"byte_end":659,"line_start":1,"line_end":31,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":95},{"krate":0,"index":124},{"krate":0,"index":366},{"krate":0,"index":703},{"krate":0,"index":726},{"krate":0,"index":753},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"decl_id":null,"docs":" Lightweight, flexible WebSockets for Rust.\n","sig":null,"attributes":[{"value":"/ Lightweight, flexible WebSockets for Rust.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"deny(missing_docs, missing_copy_implementations,\n       missing_debug_implementations, trivial_casts, trivial_numeric_casts,\n       unstable_features, unused_must_use, unused_mut, unused_imports,\n       unused_import_braces)","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":47,"byte_end":296,"line_start":2,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90}],"decl_id":null,"docs":" Methods to connect to a WebSocket as a client.\n","sig":null,"attributes":[{"value":"/ Methods to connect to a WebSocket as a client.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":661,"byte_end":711,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":1291,"byte_end":1301,"line_start":27,"line_end":27,"column_start":14,"column_end":24},"name":"AutoStream","qualname":"::client::encryption::AutoStream","value":"StreamSwitcher<TcpStream, TlsStream<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" TCP stream switcher (plain/TLS).\n","sig":null,"attributes":[{"value":"/ TCP stream switcher (plain/TLS).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":1241,"byte_end":1277,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":5076,"byte_end":5095,"line_start":134,"line_end":134,"column_start":8,"column_end":27},"name":"connect_with_config","qualname":"::client::connect_with_config","value":"pub fn connect_with_config<Req: IntoClientRequest>(Req,\n                                                   Option<WebSocketConfig>,\n                                                   u8)\n-> Result<(WebSocket<AutoStream>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4240,"byte_end":4292,"line_start":119,"line_end":119,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4293,"byte_end":4296,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Uses a websocket configuration passed as an argument to the function. Calling it with `None` is","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4297,"byte_end":4396,"line_start":121,"line_end":121,"column_start":1,"column_end":100}},{"value":"/ equal to calling `connect()` function.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4397,"byte_end":4439,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4440,"byte_end":4443,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4444,"byte_end":4486,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4487,"byte_end":4570,"line_start":125,"line_end":125,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4571,"byte_end":4574,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4575,"byte_end":4652,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4653,"byte_end":4726,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4727,"byte_end":4768,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4769,"byte_end":4772,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4773,"byte_end":4873,"line_start":131,"line_end":131,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4874,"byte_end":4970,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":4971,"byte_end":5068,"line_start":133,"line_end":133,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7983,"byte_end":7990,"line_start":202,"line_end":202,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"pub fn connect<Req: IntoClientRequest>(Req)\n-> Result<(WebSocket<AutoStream>, Response)>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7294,"byte_end":7346,"line_start":190,"line_end":190,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7347,"byte_end":7350,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7351,"byte_end":7393,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7394,"byte_end":7477,"line_start":193,"line_end":193,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7478,"byte_end":7481,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7482,"byte_end":7559,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7560,"byte_end":7633,"line_start":196,"line_end":196,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7634,"byte_end":7675,"line_start":197,"line_end":197,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7676,"byte_end":7679,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7680,"byte_end":7780,"line_start":199,"line_end":199,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7781,"byte_end":7877,"line_start":200,"line_end":200,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":7878,"byte_end":7975,"line_start":201,"line_end":201,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":8843,"byte_end":8851,"line_start":223,"line_end":223,"column_start":8,"column_end":16},"name":"uri_mode","qualname":"::client::uri_mode","value":"pub fn uri_mode(&Uri) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Get the mode of the given URL.","sig":null,"attributes":[{"value":"/ Get the mode of the given URL.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":8626,"byte_end":8660,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":8661,"byte_end":8664,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This function may be used to ease the creation of custom TLS streams","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":8665,"byte_end":8737,"line_start":221,"line_end":221,"column_start":1,"column_end":73}},{"value":"/ in non-blocking algorithms or for use with TLS libraries other than `native_tls` or `rustls`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":8738,"byte_end":8835,"line_start":222,"line_end":222,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9445,"byte_end":9463,"line_start":237,"line_end":237,"column_start":8,"column_end":26},"name":"client_with_config","qualname":"::client::client_with_config","value":"pub fn client_with_config<Stream, Req>(Req, Stream, Option<WebSocketConfig>)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream given a web socket configuration. Passing `None`\n as configuration is equal to calling `client()` function.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream given a web socket configuration. Passing `None`","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9058,"byte_end":9156,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"/ as configuration is equal to calling `client()` function.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9157,"byte_end":9218,"line_start":232,"line_end":232,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9219,"byte_end":9222,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9223,"byte_end":9298,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9299,"byte_end":9387,"line_start":235,"line_end":235,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9388,"byte_end":9437,"line_start":236,"line_end":236,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10070,"byte_end":10076,"line_start":254,"line_end":254,"column_start":8,"column_end":14},"name":"client","qualname":"::client::client","value":"pub fn client<Stream, Req>(Req, Stream)\n->\n    StdResult<(WebSocket<Stream>, Response),\n              HandshakeError<ClientHandshake<Stream>>> where Stream: Read +\nWrite, Req: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9793,"byte_end":9843,"line_start":249,"line_end":249,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9844,"byte_end":9847,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9848,"byte_end":9923,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":9924,"byte_end":10012,"line_start":252,"line_end":252,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10013,"byte_end":10062,"line_start":253,"line_end":253,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10551,"byte_end":10568,"line_start":269,"line_end":269,"column_start":11,"column_end":28},"name":"IntoClientRequest","qualname":"::client::IntoClientRequest","value":"IntoClientRequest","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Trait for converting various types into HTTP requests used for a client connection.","sig":null,"attributes":[{"value":"/ Trait for converting various types into HTTP requests used for a client connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10327,"byte_end":10414,"line_start":265,"line_end":265,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10415,"byte_end":10418,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for string slices, strings, `url::Url`, `http::Uri` and","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10419,"byte_end":10515,"line_start":267,"line_end":267,"column_start":1,"column_end":97}},{"value":"/ `http::Request<()>`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10516,"byte_end":10540,"line_start":268,"line_end":268,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10653,"byte_end":10672,"line_start":271,"line_end":271,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"::client::IntoClientRequest::into_client_request","value":"pub fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Convert into a `Request` that can be used for a client connection.\n","sig":null,"attributes":[{"value":"/ Convert into a `Request` that can be used for a client connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":10575,"byte_end":10645,"line_start":270,"line_end":270,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":792},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":823},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":839},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":859},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":850},{"krate":0,"index":849},{"krate":0,"index":867},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":943},{"krate":0,"index":933},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":924},{"krate":0,"index":923},{"krate":0,"index":945},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":966},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":974},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":988},{"krate":0,"index":978}],"decl_id":null,"docs":" Error handling.\n","sig":null,"attributes":[{"value":"/ Error handling.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12095,"byte_end":12114,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12308,"byte_end":12314,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type of all Tungstenite library calls.\n","sig":null,"attributes":[{"value":"/ Result type of all Tungstenite library calls.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12249,"byte_end":12298,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13099,"byte_end":13115,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::error::Error::ConnectionClosed","value":"Error::ConnectionClosed","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" WebSocket connection closed normally. This informs you of the close.\n It's not an error as such and nothing wrong happened.","sig":null,"attributes":[{"value":"/ WebSocket connection closed normally. This informs you of the close.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12423,"byte_end":12495,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ It's not an error as such and nothing wrong happened.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12500,"byte_end":12557,"line_start":16,"line_end":16,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12562,"byte_end":12565,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This is returned as soon as the close handshake is finished (we have both sent and","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12570,"byte_end":12656,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ received a close frame) on the server end and as soon as the server has closed the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12661,"byte_end":12747,"line_start":19,"line_end":19,"column_start":5,"column_end":91}},{"value":"/ underlying connection if this endpoint is a client.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12752,"byte_end":12807,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12812,"byte_end":12815,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Thus when you receive this, it is safe to drop the underlying connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12820,"byte_end":12897,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12902,"byte_end":12905,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Receiving this error means that the WebSocket object is not usable anymore and the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12910,"byte_end":12996,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ only meaningful action with it is dropping it.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13001,"byte_end":13051,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"error(\"Connection closed normally\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13056,"byte_end":13094,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13536,"byte_end":13549,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::error::Error::AlreadyClosed","value":"Error::AlreadyClosed","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Trying to work with already closed connection.","sig":null,"attributes":[{"value":"/ Trying to work with already closed connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13121,"byte_end":13171,"line_start":28,"line_end":28,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13176,"byte_end":13179,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Trying to read or write after receiving `ConnectionClosed` causes this.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13184,"byte_end":13259,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13264,"byte_end":13267,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As opposed to `ConnectionClosed`, this indicates your code tries to operate on the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13272,"byte_end":13358,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ connection when it really shouldn't anymore, so this really indicates a programmer","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13363,"byte_end":13449,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ error on your part.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13454,"byte_end":13477,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"error(\"Trying to work with closed connection\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13482,"byte_end":13531,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13747,"byte_end":13749,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Input-output error. Apart from WouldBlock, these are generally errors with the\n underlying connection and you should probably consider them fatal.\n","sig":null,"attributes":[{"value":"/ Input-output error. Apart from WouldBlock, these are generally errors with the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13555,"byte_end":13637,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ underlying connection and you should probably consider them fatal.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13642,"byte_end":13712,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"error(\"IO error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13717,"byte_end":13742,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13982,"byte_end":13985,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" TLS error.","sig":null,"attributes":[{"value":"/ TLS error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13774,"byte_end":13788,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13793,"byte_end":13796,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this error variant is enabled unconditionally even if no TLS feature is enabled,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13801,"byte_end":13895,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ to provide a feature-agnostic API surface.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13900,"byte_end":13946,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"error(\"TLS error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":13951,"byte_end":13977,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14215,"byte_end":14223,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::error::Error::Capacity","value":"Error::Capacity(CapacityError)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" - When reading: buffer capacity exhausted.\n - When writing: your message is bigger than the configured max message size\n   (64MB by default).\n","sig":null,"attributes":[{"value":"/ - When reading: buffer capacity exhausted.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14009,"byte_end":14055,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/ - When writing: your message is bigger than the configured max message size","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14060,"byte_end":14139,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/   (64MB by default).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14144,"byte_end":14168,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"error(\"Space limit exceeded: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14173,"byte_end":14210,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14318,"byte_end":14326,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::error::Error::Protocol","value":"Error::Protocol(ProtocolError)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Protocol violation.\n","sig":null,"attributes":[{"value":"/ Protocol violation.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14244,"byte_end":14267,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"WebSocket protocol error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14272,"byte_end":14313,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14415,"byte_end":14428,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"SendQueueFull","qualname":"::error::Error::SendQueueFull","value":"Error::SendQueueFull(Message)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Message send queue full.\n","sig":null,"attributes":[{"value":"/ Message send queue full.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14347,"byte_end":14375,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"error(\"Send queue is full\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14380,"byte_end":14410,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14506,"byte_end":14510,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::Error::Utf8","value":"Error::Utf8","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" UTF coding error.\n","sig":null,"attributes":[{"value":"/ UTF coding error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14443,"byte_end":14464,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"error(\"UTF-8 encoding error\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14469,"byte_end":14501,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14568,"byte_end":14571,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Url","qualname":"::error::Error::Url","value":"Error::Url(UrlError)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Invalid URL.\n","sig":null,"attributes":[{"value":"/ Invalid URL.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14516,"byte_end":14532,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"error(\"URL error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14537,"byte_end":14563,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14651,"byte_end":14655,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Http","qualname":"::error::Error::Http","value":"Error::Http(Response<Option<String>>)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" HTTP error.\n","sig":null,"attributes":[{"value":"/ HTTP error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14587,"byte_end":14602,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"error(\"HTTP error: {}\", . 0 . status())","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14607,"byte_end":14646,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14753,"byte_end":14763,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"HttpFormat","qualname":"::error::Error::HttpFormat","value":"Error::HttpFormat(http::Error)","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" HTTP format error.\n","sig":null,"attributes":[{"value":"/ HTTP format error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14687,"byte_end":14709,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"error(\"HTTP format error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14714,"byte_end":14748,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12411,"byte_end":12416,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// WebSocket connection closed normally. This informs you of the close.\n    /// It's not an error as such and nothing wrong happened.\n    ///\n    /// This is returned as soon as the close handshake is finished (we have both sent and\n    /// received a close frame) on the server end and as soon as the server has closed the\n    /// underlying connection if this endpoint is a client.\n    ///\n    /// Thus when you receive this, it is safe to drop the underlying connection.\n    ///\n    /// Receiving this error means that the WebSocket object is not usable anymore and the\n    /// only meaningful action with it is dropping it.\n    #[error(\"Connection closed normally\")]\n    ConnectionClosed,\n\n    /// Trying to work with already closed connection.\n    ///\n    /// Trying to read or write after receiving `ConnectionClosed` causes this.\n    ///\n    /// As opposed to `ConnectionClosed`, this indicates your code tries to operate on the\n    /// connection when it really shouldn't anymore, so this really indicates a programmer\n    /// error on your part.\n    #[error(\"Trying to work with closed connection\")]\n    AlreadyClosed,\n\n    /// Input-output error. Apart from WouldBlock, these are generally errors with the\n    /// underlying connection and you should probably consider them fatal.\n    #[error(\"IO error: {0}\")]\n    Io(\n       #[from]\n       io::Error),\n\n    /// TLS error.\n    ///\n    /// Note that this error variant is enabled unconditionally even if no TLS feature is enabled,\n    /// to provide a feature-agnostic API surface.\n    #[error(\"TLS error: {0}\")]\n    Tls(\n        #[from]\n        TlsError),\n\n    /// - When reading: buffer capacity exhausted.\n    /// - When writing: your message is bigger than the configured max message size\n    ///   (64MB by default).\n    #[error(\"Space limit exceeded: {0}\")]\n    Capacity(CapacityError),\n\n    /// Protocol violation.\n    #[error(\"WebSocket protocol error: {0}\")]\n    Protocol(ProtocolError),\n\n    /// Message send queue full.\n    #[error(\"Send queue is full\")]\n    SendQueueFull(Message),\n\n    /// UTF coding error.\n    #[error(\"UTF-8 encoding error\")]\n    Utf8,\n\n    /// Invalid URL.\n    #[error(\"URL error: {0}\")]\n    Url(UrlError),\n\n    /// HTTP error.\n    #[error(\"HTTP error: {}\", . 0 . status())]\n    Http(Response<Option<String>>),\n\n    /// HTTP format error.\n    #[error(\"HTTP format error: {0}\")]\n    HttpFormat(\n               #[from]\n               http::Error),\n}","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820}],"decl_id":null,"docs":" Possible WebSocket errors.\n","sig":null,"attributes":[{"value":"/ Possible WebSocket errors.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":12347,"byte_end":12377,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16311,"byte_end":16325,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::error::CapacityError::TooManyHeaders","value":"CapacityError::TooManyHeaders","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n","sig":null,"attributes":[{"value":"/ Too many headers provided (see [`httparse::Error::TooManyHeaders`]).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16201,"byte_end":16273,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"error(\"Too many headers\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16278,"byte_end":16306,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16400,"byte_end":16413,"line_start":131,"line_end":131,"column_start":5,"column_end":18},"name":"HeaderTooLong","qualname":"::error::CapacityError::HeaderTooLong","value":"CapacityError::HeaderTooLong","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Received header is too long.\n","sig":null,"attributes":[{"value":"/ Received header is too long.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16331,"byte_end":16363,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"error(\"Header too long\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16368,"byte_end":16395,"line_start":130,"line_end":130,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16530,"byte_end":16544,"line_start":134,"line_end":134,"column_start":5,"column_end":19},"name":"MessageTooLong","qualname":"::error::CapacityError::MessageTooLong","value":"CapacityError::MessageTooLong { size, max_size }","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Message is bigger than the maximum allowed size.\n","sig":null,"attributes":[{"value":"/ Message is bigger than the maximum allowed size.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16419,"byte_end":16471,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"error(\"Message too long: {size} > {max_size}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16476,"byte_end":16525,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16759,"byte_end":16772,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"TcpBufferFull","qualname":"::error::CapacityError::TcpBufferFull","value":"CapacityError::TcpBufferFull","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" TCP buffer is full.\n","sig":null,"attributes":[{"value":"/ TCP buffer is full.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16687,"byte_end":16710,"line_start":140,"line_end":140,"column_start":5,"column_end":28}},{"value":"error(\"Incoming TCP buffer is full\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16715,"byte_end":16754,"line_start":141,"line_end":141,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16181,"byte_end":16194,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"CapacityError","qualname":"::error::CapacityError","value":"pub enum CapacityError {\n\n    /// Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n    #[error(\"Too many headers\")]\n    TooManyHeaders,\n\n    /// Received header is too long.\n    #[error(\"Header too long\")]\n    HeaderTooLong,\n\n    /// Message is bigger than the maximum allowed size.\n    #[error(\"Message too long: {size} > {max_size}\")]\n    MessageTooLong {\n        /// The size of the message.\n        size: usize,\n        /// The maximum allowed message size.\n        max_size: usize,\n    },\n\n    /// TCP buffer is full.\n    #[error(\"Incoming TCP buffer is full\")]\n    TcpBufferFull,\n}","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":847}],"decl_id":null,"docs":" Indicates the specific type/cause of a capacity error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a capacity error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16061,"byte_end":16119,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17079,"byte_end":17094,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"WrongHttpMethod","qualname":"::error::ProtocolError::WrongHttpMethod","value":"ProtocolError::WrongHttpMethod","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n","sig":null,"attributes":[{"value":"/ Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16917,"byte_end":17007,"line_start":148,"line_end":148,"column_start":5,"column_end":95}},{"value":"error(\"Unsupported HTTP method used - only GET is allowed\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17012,"byte_end":17074,"line_start":149,"line_end":149,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17240,"byte_end":17256,"line_start":153,"line_end":153,"column_start":5,"column_end":21},"name":"WrongHttpVersion","qualname":"::error::ProtocolError::WrongHttpVersion","value":"ProtocolError::WrongHttpVersion","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n","sig":null,"attributes":[{"value":"/ Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17100,"byte_end":17184,"line_start":151,"line_end":151,"column_start":5,"column_end":89}},{"value":"error(\"HTTP version must be 1.1 or higher\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17189,"byte_end":17235,"line_start":152,"line_end":152,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17363,"byte_end":17393,"line_start":156,"line_end":156,"column_start":5,"column_end":35},"name":"MissingConnectionUpgradeHeader","qualname":"::error::ProtocolError::MissingConnectionUpgradeHeader","value":"ProtocolError::MissingConnectionUpgradeHeader","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Missing `Connection: upgrade` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Connection: upgrade` HTTP header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17262,"byte_end":17308,"line_start":154,"line_end":154,"column_start":5,"column_end":51}},{"value":"error(\"No \\\"Connection: upgrade\\\" header\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17313,"byte_end":17358,"line_start":155,"line_end":155,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17498,"byte_end":17527,"line_start":159,"line_end":159,"column_start":5,"column_end":34},"name":"MissingUpgradeWebSocketHeader","qualname":"::error::ProtocolError::MissingUpgradeWebSocketHeader","value":"ProtocolError::MissingUpgradeWebSocketHeader","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Missing `Upgrade: websocket` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Upgrade: websocket` HTTP header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17399,"byte_end":17444,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"error(\"No \\\"Upgrade: websocket\\\" header\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17449,"byte_end":17493,"line_start":158,"line_end":158,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17646,"byte_end":17678,"line_start":162,"line_end":162,"column_start":5,"column_end":37},"name":"MissingSecWebSocketVersionHeader","qualname":"::error::ProtocolError::MissingSecWebSocketVersionHeader","value":"ProtocolError::MissingSecWebSocketVersionHeader","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Version: 13` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Version: 13` HTTP header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17533,"byte_end":17585,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17590,"byte_end":17641,"line_start":161,"line_end":161,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17781,"byte_end":17803,"line_start":165,"line_end":165,"column_start":5,"column_end":27},"name":"MissingSecWebSocketKey","qualname":"::error::ProtocolError::MissingSecWebSocketKey","value":"ProtocolError::MissingSecWebSocketKey","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Key` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Key` HTTP header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17684,"byte_end":17728,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"error(\"No \\\"Sec-WebSocket-Key\\\" header\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17733,"byte_end":17776,"line_start":164,"line_end":164,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17980,"byte_end":18009,"line_start":168,"line_end":168,"column_start":5,"column_end":34},"name":"SecWebSocketAcceptKeyMismatch","qualname":"::error::ProtocolError::SecWebSocketAcceptKeyMismatch","value":"ProtocolError::SecWebSocketAcceptKeyMismatch","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n","sig":null,"attributes":[{"value":"/ The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17809,"byte_end":17911,"line_start":166,"line_end":166,"column_start":5,"column_end":107}},{"value":"error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":17916,"byte_end":17975,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18112,"byte_end":18128,"line_start":171,"line_end":171,"column_start":5,"column_end":21},"name":"JunkAfterRequest","qualname":"::error::ProtocolError::JunkAfterRequest","value":"ProtocolError::JunkAfterRequest","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Garbage data encountered after client request.\n","sig":null,"attributes":[{"value":"/ Garbage data encountered after client request.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18015,"byte_end":18065,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"error(\"Junk after client request\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18070,"byte_end":18107,"line_start":170,"line_end":170,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18236,"byte_end":18260,"line_start":174,"line_end":174,"column_start":5,"column_end":29},"name":"CustomResponseSuccessful","qualname":"::error::ProtocolError::CustomResponseSuccessful","value":"ProtocolError::CustomResponseSuccessful","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Custom responses must be unsuccessful.\n","sig":null,"attributes":[{"value":"/ Custom responses must be unsuccessful.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18134,"byte_end":18176,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"error(\"Custom response must not be successful\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18181,"byte_end":18231,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18360,"byte_end":18379,"line_start":177,"line_end":177,"column_start":5,"column_end":24},"name":"HandshakeIncomplete","qualname":"::error::ProtocolError::HandshakeIncomplete","value":"ProtocolError::HandshakeIncomplete","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" No more data while still performing handshake.\n","sig":null,"attributes":[{"value":"/ No more data while still performing handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18266,"byte_end":18316,"line_start":175,"line_end":175,"column_start":5,"column_end":55}},{"value":"error(\"Handshake not finished\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18321,"byte_end":18355,"line_start":176,"line_end":176,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18473,"byte_end":18486,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"HttparseError","qualname":"::error::ProtocolError::HttparseError","value":"ProtocolError::HttparseError(httparse::Error)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Wrapper around a [`httparse::Error`] value.\n","sig":null,"attributes":[{"value":"/ Wrapper around a [`httparse::Error`] value.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18385,"byte_end":18432,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"error(\"httparse error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18437,"byte_end":18468,"line_start":179,"line_end":179,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18633,"byte_end":18649,"line_start":183,"line_end":183,"column_start":5,"column_end":21},"name":"SendAfterClosing","qualname":"::error::ProtocolError::SendAfterClosing","value":"ProtocolError::SendAfterClosing","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Not allowed to send after having sent a closing frame.\n","sig":null,"attributes":[{"value":"/ Not allowed to send after having sent a closing frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18517,"byte_end":18575,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"error(\"Sending after closing is not allowed\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18580,"byte_end":18628,"line_start":182,"line_end":182,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18759,"byte_end":18779,"line_start":186,"line_end":186,"column_start":5,"column_end":25},"name":"ReceivedAfterClosing","qualname":"::error::ProtocolError::ReceivedAfterClosing","value":"ProtocolError::ReceivedAfterClosing","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Remote sent data after sending a closing frame.\n","sig":null,"attributes":[{"value":"/ Remote sent data after sending a closing frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18655,"byte_end":18706,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"error(\"Remote sent after having closed\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18711,"byte_end":18754,"line_start":185,"line_end":185,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18880,"byte_end":18899,"line_start":189,"line_end":189,"column_start":5,"column_end":24},"name":"NonZeroReservedBits","qualname":"::error::ProtocolError::NonZeroReservedBits","value":"ProtocolError::NonZeroReservedBits","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Reserved bits in frame header are non-zero.\n","sig":null,"attributes":[{"value":"/ Reserved bits in frame header are non-zero.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18785,"byte_end":18832,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"error(\"Reserved bits are non-zero\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18837,"byte_end":18875,"line_start":188,"line_end":188,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19041,"byte_end":19064,"line_start":192,"line_end":192,"column_start":5,"column_end":28},"name":"UnmaskedFrameFromClient","qualname":"::error::ProtocolError::UnmaskedFrameFromClient","value":"ProtocolError::UnmaskedFrameFromClient","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The server must close the connection when an unmasked frame is received.\n","sig":null,"attributes":[{"value":"/ The server must close the connection when an unmasked frame is received.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18905,"byte_end":18981,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"error(\"Received an unmasked frame from client\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":18986,"byte_end":19036,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19200,"byte_end":19221,"line_start":195,"line_end":195,"column_start":5,"column_end":26},"name":"MaskedFrameFromServer","qualname":"::error::ProtocolError::MaskedFrameFromServer","value":"ProtocolError::MaskedFrameFromServer","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The client must close the connection when a masked frame is received.\n","sig":null,"attributes":[{"value":"/ The client must close the connection when a masked frame is received.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19070,"byte_end":19143,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"error(\"Received a masked frame from server\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19148,"byte_end":19195,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19315,"byte_end":19337,"line_start":198,"line_end":198,"column_start":5,"column_end":27},"name":"FragmentedControlFrame","qualname":"::error::ProtocolError::FragmentedControlFrame","value":"ProtocolError::FragmentedControlFrame","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Control frames must not be fragmented.\n","sig":null,"attributes":[{"value":"/ Control frames must not be fragmented.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19227,"byte_end":19269,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"error(\"Fragmented control frame\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19274,"byte_end":19310,"line_start":197,"line_end":197,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19482,"byte_end":19500,"line_start":201,"line_end":201,"column_start":5,"column_end":23},"name":"ControlFrameTooBig","qualname":"::error::ProtocolError::ControlFrameTooBig","value":"ProtocolError::ControlFrameTooBig","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Control frames must have a payload of 125 bytes or less.\n","sig":null,"attributes":[{"value":"/ Control frames must have a payload of 125 bytes or less.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19343,"byte_end":19403,"line_start":199,"line_end":199,"column_start":5,"column_end":65}},{"value":"error(\"Control frame too big (payload must be 125 bytes or less)\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19408,"byte_end":19477,"line_start":200,"line_end":200,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19600,"byte_end":19623,"line_start":204,"line_end":204,"column_start":5,"column_end":28},"name":"UnknownControlFrameType","qualname":"::error::ProtocolError::UnknownControlFrameType","value":"ProtocolError::UnknownControlFrameType(u8)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Type of control frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of control frame not recognised.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19506,"byte_end":19547,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"error(\"Unknown control frame type: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19552,"byte_end":19595,"line_start":203,"line_end":203,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19721,"byte_end":19741,"line_start":207,"line_end":207,"column_start":5,"column_end":25},"name":"UnknownDataFrameType","qualname":"::error::ProtocolError::UnknownDataFrameType","value":"ProtocolError::UnknownDataFrameType(u8)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Type of data frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of data frame not recognised.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19633,"byte_end":19671,"line_start":205,"line_end":205,"column_start":5,"column_end":43}},{"value":"error(\"Unknown data frame type: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19676,"byte_end":19716,"line_start":206,"line_end":206,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19881,"byte_end":19904,"line_start":210,"line_end":210,"column_start":5,"column_end":28},"name":"UnexpectedContinueFrame","qualname":"::error::ProtocolError::UnexpectedContinueFrame","value":"ProtocolError::UnexpectedContinueFrame","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Received a continue frame despite there being nothing to continue.\n","sig":null,"attributes":[{"value":"/ Received a continue frame despite there being nothing to continue.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19751,"byte_end":19821,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"error(\"Continue frame but nothing to continue\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19826,"byte_end":19876,"line_start":209,"line_end":209,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20029,"byte_end":20045,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"ExpectedFragment","qualname":"::error::ProtocolError::ExpectedFragment","value":"ProtocolError::ExpectedFragment(Data)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Received data while waiting for more fragments.\n","sig":null,"attributes":[{"value":"/ Received data while waiting for more fragments.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19910,"byte_end":19961,"line_start":211,"line_end":211,"column_start":5,"column_end":56}},{"value":"error(\"While waiting for more fragments received: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":19966,"byte_end":20024,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20184,"byte_end":20212,"line_start":216,"line_end":216,"column_start":5,"column_end":33},"name":"ResetWithoutClosingHandshake","qualname":"::error::ProtocolError::ResetWithoutClosingHandshake","value":"ProtocolError::ResetWithoutClosingHandshake","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Connection closed without performing the closing handshake.\n","sig":null,"attributes":[{"value":"/ Connection closed without performing the closing handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20057,"byte_end":20120,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"error(\"Connection reset without closing handshake\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20125,"byte_end":20179,"line_start":215,"line_end":215,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20305,"byte_end":20318,"line_start":219,"line_end":219,"column_start":5,"column_end":18},"name":"InvalidOpcode","qualname":"::error::ProtocolError::InvalidOpcode","value":"ProtocolError::InvalidOpcode(u8)","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" Encountered an invalid opcode.\n","sig":null,"attributes":[{"value":"/ Encountered an invalid opcode.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20218,"byte_end":20252,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"error(\"Encountered invalid opcode: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20257,"byte_end":20300,"line_start":218,"line_end":218,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20421,"byte_end":20441,"line_start":222,"line_end":222,"column_start":5,"column_end":25},"name":"InvalidCloseSequence","qualname":"::error::ProtocolError::InvalidCloseSequence","value":"ProtocolError::InvalidCloseSequence","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The payload for the closing frame is invalid.\n","sig":null,"attributes":[{"value":"/ The payload for the closing frame is invalid.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20328,"byte_end":20377,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"error(\"Invalid close sequence\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20382,"byte_end":20416,"line_start":221,"line_end":221,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16897,"byte_end":16910,"line_start":147,"line_end":147,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::error::ProtocolError","value":"pub enum ProtocolError {\n\n    /// Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n    #[error(\"Unsupported HTTP method used - only GET is allowed\")]\n    WrongHttpMethod,\n\n    /// Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n    #[error(\"HTTP version must be 1.1 or higher\")]\n    WrongHttpVersion,\n\n    /// Missing `Connection: upgrade` HTTP header.\n    #[error(\"No \\\"Connection: upgrade\\\" header\")]\n    MissingConnectionUpgradeHeader,\n\n    /// Missing `Upgrade: websocket` HTTP header.\n    #[error(\"No \\\"Upgrade: websocket\\\" header\")]\n    MissingUpgradeWebSocketHeader,\n\n    /// Missing `Sec-WebSocket-Version: 13` HTTP header.\n    #[error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")]\n    MissingSecWebSocketVersionHeader,\n\n    /// Missing `Sec-WebSocket-Key` HTTP header.\n    #[error(\"No \\\"Sec-WebSocket-Key\\\" header\")]\n    MissingSecWebSocketKey,\n\n    /// The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n    #[error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")]\n    SecWebSocketAcceptKeyMismatch,\n\n    /// Garbage data encountered after client request.\n    #[error(\"Junk after client request\")]\n    JunkAfterRequest,\n\n    /// Custom responses must be unsuccessful.\n    #[error(\"Custom response must not be successful\")]\n    CustomResponseSuccessful,\n\n    /// No more data while still performing handshake.\n    #[error(\"Handshake not finished\")]\n    HandshakeIncomplete,\n\n    /// Wrapper around a [`httparse::Error`] value.\n    #[error(\"httparse error: {0}\")]\n    HttparseError(\n                  #[from]\n                  httparse::Error),\n\n    /// Not allowed to send after having sent a closing frame.\n    #[error(\"Sending after closing is not allowed\")]\n    SendAfterClosing,\n\n    /// Remote sent data after sending a closing frame.\n    #[error(\"Remote sent after having closed\")]\n    ReceivedAfterClosing,\n\n    /// Reserved bits in frame header are non-zero.\n    #[error(\"Reserved bits are non-zero\")]\n    NonZeroReservedBits,\n\n    /// The server must close the connection when an unmasked frame is received.\n    #[error(\"Received an unmasked frame from client\")]\n    UnmaskedFrameFromClient,\n\n    /// The client must close the connection when a masked frame is received.\n    #[error(\"Received a masked frame from server\")]\n    MaskedFrameFromServer,\n\n    /// Control frames must not be fragmented.\n    #[error(\"Fragmented control frame\")]\n    FragmentedControlFrame,\n\n    /// Control frames must have a payload of 125 bytes or less.\n    #[error(\"Control frame too big (payload must be 125 bytes or less)\")]\n    ControlFrameTooBig,\n\n    /// Type of control frame not recognised.\n    #[error(\"Unknown control frame type: {0}\")]\n    UnknownControlFrameType(u8),\n\n    /// Type of data frame not recognised.\n    #[error(\"Unknown data frame type: {0}\")]\n    UnknownDataFrameType(u8),\n\n    /// Received a continue frame despite there being nothing to continue.\n    #[error(\"Continue frame but nothing to continue\")]\n    UnexpectedContinueFrame,\n\n    /// Received data while waiting for more fragments.\n    #[error(\"While waiting for more fragments received: {0}\")]\n    ExpectedFragment(Data),\n\n    /// Connection closed without performing the closing handshake.\n    #[error(\"Connection reset without closing handshake\")]\n    ResetWithoutClosingHandshake,\n\n    /// Encountered an invalid opcode.\n    #[error(\"Encountered invalid opcode: {0}\")]\n    InvalidOpcode(u8),\n\n    /// The payload for the closing frame is invalid.\n    #[error(\"Invalid close sequence\")]\n    InvalidCloseSequence,\n}","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":921}],"decl_id":null,"docs":" Indicates the specific type/cause of a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a protocol error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":16777,"byte_end":16835,"line_start":145,"line_end":145,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20682,"byte_end":20702,"line_start":230,"line_end":230,"column_start":5,"column_end":25},"name":"TlsFeatureNotEnabled","qualname":"::error::UrlError::TlsFeatureNotEnabled","value":"UrlError::TlsFeatureNotEnabled","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" TLS is used despite not being compiled with the TLS feature enabled.\n","sig":null,"attributes":[{"value":"/ TLS is used despite not being compiled with the TLS feature enabled.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20561,"byte_end":20633,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"error(\"TLS support not compiled in\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20638,"byte_end":20677,"line_start":229,"line_end":229,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20794,"byte_end":20804,"line_start":233,"line_end":233,"column_start":5,"column_end":15},"name":"NoHostName","qualname":"::error::UrlError::NoHostName","value":"UrlError::NoHostName","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" The URL does not include a host name.\n","sig":null,"attributes":[{"value":"/ The URL does not include a host name.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20708,"byte_end":20749,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"error(\"No host name in the URL\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20754,"byte_end":20789,"line_start":232,"line_end":232,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20892,"byte_end":20907,"line_start":236,"line_end":236,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::error::UrlError::UnableToConnect","value":"UrlError::UnableToConnect(String)","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" Failed to connect with this URL.\n","sig":null,"attributes":[{"value":"/ Failed to connect with this URL.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20810,"byte_end":20846,"line_start":234,"line_end":234,"column_start":5,"column_end":41}},{"value":"error(\"Unable to connect to {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20851,"byte_end":20887,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21038,"byte_end":21058,"line_start":239,"line_end":239,"column_start":5,"column_end":25},"name":"UnsupportedUrlScheme","qualname":"::error::UrlError::UnsupportedUrlScheme","value":"UrlError::UnsupportedUrlScheme","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n","sig":null,"attributes":[{"value":"/ Unsupported URL scheme used (only `ws://` or `wss://` may be used).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20921,"byte_end":20992,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"error(\"URL scheme not supported\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20997,"byte_end":21033,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21163,"byte_end":21176,"line_start":242,"line_end":242,"column_start":5,"column_end":18},"name":"EmptyHostName","qualname":"::error::UrlError::EmptyHostName","value":"UrlError::EmptyHostName","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" The URL host name, though included, is empty.\n","sig":null,"attributes":[{"value":"/ The URL host name, though included, is empty.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21064,"byte_end":21113,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"error(\"URL contains empty host name\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21118,"byte_end":21158,"line_start":241,"line_end":241,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21266,"byte_end":21279,"line_start":245,"line_end":245,"column_start":5,"column_end":18},"name":"NoPathOrQuery","qualname":"::error::UrlError::NoPathOrQuery","value":"UrlError::NoPathOrQuery","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" The URL does not include a path/query.\n","sig":null,"attributes":[{"value":"/ The URL does not include a path/query.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21182,"byte_end":21224,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"error(\"No path/query in URL\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21229,"byte_end":21261,"line_start":244,"line_end":244,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20546,"byte_end":20554,"line_start":227,"line_end":227,"column_start":10,"column_end":18},"name":"UrlError","qualname":"::error::UrlError","value":"pub enum UrlError {\n\n    /// TLS is used despite not being compiled with the TLS feature enabled.\n    #[error(\"TLS support not compiled in\")]\n    TlsFeatureNotEnabled,\n\n    /// The URL does not include a host name.\n    #[error(\"No host name in the URL\")]\n    NoHostName,\n\n    /// Failed to connect with this URL.\n    #[error(\"Unable to connect to {0}\")]\n    UnableToConnect(String),\n\n    /// Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n    #[error(\"URL scheme not supported\")]\n    UnsupportedUrlScheme,\n\n    /// The URL host name, though included, is empty.\n    #[error(\"URL contains empty host name\")]\n    EmptyHostName,\n\n    /// The URL does not include a path/query.\n    #[error(\"No path/query in URL\")]\n    NoPathOrQuery,\n}","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"decl_id":null,"docs":" Indicates the specific type/cause of URL error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of URL error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":20446,"byte_end":20497,"line_start":225,"line_end":225,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21698,"byte_end":21704,"line_start":259,"line_end":259,"column_start":5,"column_end":11},"name":"Native","qualname":"::error::TlsError::Native","value":"TlsError::Native(native_tls_crate::Error)","parent":{"krate":0,"index":974},"children":[],"decl_id":null,"docs":" Native TLS error.\n","sig":null,"attributes":[{"value":"/ Native TLS error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21599,"byte_end":21620,"line_start":256,"line_end":256,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"native-tls\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21625,"byte_end":21655,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"error(\"native-tls error: {0}\")","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21660,"byte_end":21693,"line_start":258,"line_end":258,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21584,"byte_end":21592,"line_start":255,"line_end":255,"column_start":10,"column_end":18},"name":"TlsError","qualname":"::error::TlsError","value":"pub enum TlsError {\n\n    /// Native TLS error.\n    #[cfg(feature = \"native-tls\")]\n    #[error(\"native-tls error: {0}\")]\n    Native(\n           #[from]\n           native_tls_crate::Error),\n}","parent":null,"children":[{"krate":0,"index":975}],"decl_id":null,"docs":" TLS errors.","sig":null,"attributes":[{"value":"/ TLS errors.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21284,"byte_end":21299,"line_start":248,"line_end":248,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21300,"byte_end":21303,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Note that even if you enable only the rustls-based TLS support, the error at runtime could still","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21304,"byte_end":21404,"line_start":250,"line_end":250,"column_start":1,"column_end":101}},{"value":"/ be `Native`, as another crate in the dependency graph may enable native TLS support.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21405,"byte_end":21493,"line_start":251,"line_end":251,"column_start":1,"column_end":89}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21494,"byte_end":21532,"line_start":252,"line_end":252,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":21557,"byte_end":21574,"line_start":254,"line_end":254,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handshake","qualname":"::handshake","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":189},{"krate":0,"index":208},{"krate":0,"index":289},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":1066},{"krate":0,"index":1070},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":1073},{"krate":0,"index":1082},{"krate":0,"index":364}],"decl_id":null,"docs":" WebSocket handshake control.\n","sig":null,"attributes":[{"value":"/ WebSocket handshake control.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22025,"byte_end":22057,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::handshake::client","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":1499},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":990},{"krate":0,"index":995},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":172},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":187}],"decl_id":null,"docs":" Client handshake machine.\n","sig":null,"attributes":[{"value":"/ Client handshake machine.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26149,"byte_end":26178,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26705,"byte_end":26712,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::client::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Client request type.\n","sig":null,"attributes":[{"value":"/ Client request type.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26671,"byte_end":26695,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26768,"byte_end":26776,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::client::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Client response type.\n","sig":null,"attributes":[{"value":"/ Client response type.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26733,"byte_end":26758,"line_start":26,"line_end":26,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26853,"byte_end":26868,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"ClientHandshake","qualname":"::handshake::client::ClientHandshake","value":"ClientHandshake {  }","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"decl_id":null,"docs":" Client handshake role.\n","sig":null,"attributes":[{"value":"/ Client handshake role.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26798,"byte_end":26824,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":27063,"byte_end":27068,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<ClientHandshake<S>>::start","value":"pub fn start(S, Request, Option<WebSocketConfig>)\n-> Result<MidHandshake<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a client handshake.\n","sig":null,"attributes":[{"value":"/ Initiate a client handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":27019,"byte_end":27051,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::handshake::headers","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":205}],"decl_id":null,"docs":" HTTP Request and response header handling.\n","sig":null,"attributes":[{"value":"/ HTTP Request and response header handling.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":37727,"byte_end":37773,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":37963,"byte_end":37974,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"MAX_HEADERS","qualname":"::handshake::headers::MAX_HEADERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Limit for the number of header lines.\n","sig":null,"attributes":[{"value":"/ Limit for the number of header lines.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":37911,"byte_end":37952,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::handshake::server","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":1561},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":1002},{"krate":0,"index":1007},{"krate":0,"index":1006},{"krate":0,"index":1004},{"krate":0,"index":276},{"krate":0,"index":1009},{"krate":0,"index":1016},{"krate":0,"index":278},{"krate":0,"index":282}],"decl_id":null,"docs":" Server handshake machine.\n","sig":null,"attributes":[{"value":"/ Server handshake machine.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":40399,"byte_end":40428,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":41010,"byte_end":41017,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::server::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Server request type.\n","sig":null,"attributes":[{"value":"/ Server request type.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":40976,"byte_end":41000,"line_start":26,"line_end":26,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":41073,"byte_end":41081,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::server::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Server response type.\n","sig":null,"attributes":[{"value":"/ Server response type.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":41038,"byte_end":41063,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":41144,"byte_end":41157,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ErrorResponse","qualname":"::handshake::server::ErrorResponse","value":"HttpResponse<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Server error response type.\n","sig":null,"attributes":[{"value":"/ Server error response type.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":41103,"byte_end":41134,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":42783,"byte_end":42798,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"create_response","qualname":"::handshake::server::create_response","value":"pub fn create_response(&Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request.\n","sig":null,"attributes":[{"value":"/ Create a response for the request.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":42737,"byte_end":42775,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":42950,"byte_end":42975,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"create_response_with_body","qualname":"::handshake::server::create_response_with_body","value":"pub fn create_response_with_body<T, impl FnOnce() -> T: FnOnce() ->\n                                 T>(&HttpRequest<T>, impl FnOnce() -> T)\n-> Result<HttpResponse<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request with a custom body.\n","sig":null,"attributes":[{"value":"/ Create a response for the request with a custom body.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":42885,"byte_end":42942,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45262,"byte_end":45270,"line_start":155,"line_end":155,"column_start":11,"column_end":19},"name":"Callback","qualname":"::handshake::server::Callback","value":"Callback: Sized","parent":null,"children":[{"krate":0,"index":272}],"decl_id":null,"docs":" The callback trait.","sig":null,"attributes":[{"value":"/ The callback trait.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":44907,"byte_end":44930,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":44931,"byte_end":44934,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The callback is called when the server receives an incoming WebSocket","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":44935,"byte_end":45008,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ handshake request from the client. Specifying a callback allows you to analyze incoming headers","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45009,"byte_end":45108,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ and add additional headers to the response that server sends to the client and/or reject the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45109,"byte_end":45205,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ connection based on the incoming headers.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45206,"byte_end":45251,"line_start":154,"line_end":154,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45504,"byte_end":45514,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handshake::server::Callback::on_request","value":"pub fn on_request(Self, &Request, Response)\n-> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Called whenever the server read the request from the client and is ready to reply to it.\n May return additional reply headers.\n Returning an error resulting in rejecting the incoming connection.\n","sig":null,"attributes":[{"value":"/ Called whenever the server read the request from the client and is ready to reply to it.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45284,"byte_end":45376,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ May return additional reply headers.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45381,"byte_end":45421,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ Returning an error resulting in rejecting the incoming connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45426,"byte_end":45496,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45994,"byte_end":46004,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"NoCallback","qualname":"::handshake::server::NoCallback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stub for callback that does nothing.\n","sig":null,"attributes":[{"value":"/ Stub for callback that does nothing.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45912,"byte_end":45952,"line_start":179,"line_end":179,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46297,"byte_end":46312,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ServerHandshake","qualname":"::handshake::server::ServerHandshake","value":"ServerHandshake {  }","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" Server handshake role.\n","sig":null,"attributes":[{"value":"/ Server handshake role.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46203,"byte_end":46229,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46230,"byte_end":46268,"line_start":194,"line_end":194,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47269,"byte_end":47274,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"start","qualname":"<ServerHandshake<S, C>>::start","value":"pub fn start(S, C, Option<WebSocketConfig>) -> MidHandshake<Self>","parent":null,"children":[],"decl_id":null,"docs":" Start server handshake. `callback` specifies a custom callback which the user can pass to\n the handshake, this callback will be called when the a websocket client connnects to the\n server, you can specify the callback if you want to add additional header to the client\n upon join based on the incoming headers.\n","sig":null,"attributes":[{"value":"/ Start server handshake. `callback` specifies a custom callback which the user can pass to","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46922,"byte_end":47015,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ the handshake, this callback will be called when the a websocket client connnects to the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47020,"byte_end":47112,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ server, you can specify the callback if you want to add additional header to the client","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47117,"byte_end":47208,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ upon join based on the incoming headers.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47213,"byte_end":47257,"line_start":213,"line_end":213,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51480,"byte_end":51496,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"HandshakeMachine","qualname":"::handshake::machine::HandshakeMachine","value":"HandshakeMachine {  }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"decl_id":null,"docs":" A generic handshake state machine.\n","sig":null,"attributes":[{"value":"/ A generic handshake state machine.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51413,"byte_end":51451,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51650,"byte_end":51660,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"start_read","qualname":"<HandshakeMachine<Stream>>::start_read","value":"pub fn start_read(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start reading data from the peer.\n","sig":null,"attributes":[{"value":"/ Start reading data from the peer.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51601,"byte_end":51638,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51883,"byte_end":51894,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"start_write","qualname":"<HandshakeMachine<Stream>>::start_write","value":"pub fn start_write<D: Into<Vec<u8>>>(Stream, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start writing data to the peer.\n","sig":null,"attributes":[{"value":"/ Start writing data to the peer.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51836,"byte_end":51871,"line_start":26,"line_end":26,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52115,"byte_end":52122,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<HandshakeMachine<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52052,"byte_end":52103,"line_start":30,"line_end":30,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52238,"byte_end":52245,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HandshakeMachine<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52174,"byte_end":52226,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52415,"byte_end":52427,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"single_round","qualname":"<HandshakeMachine<Stream>>::single_round","value":"pub fn single_round<Obj: TryParse>(Self) -> Result<RoundResult<Obj, Stream>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a single handshake round.\n","sig":null,"attributes":[{"value":"/ Perform a single handshake round.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52366,"byte_end":52403,"line_start":41,"line_end":41,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":54925,"byte_end":54935,"line_start":101,"line_end":101,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::handshake::machine::RoundResult::WouldBlock","value":"RoundResult::WouldBlock(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Round not done, I/O would block.\n","sig":null,"attributes":[{"value":"/ Round not done, I/O would block.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":54884,"byte_end":54920,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55004,"byte_end":55014,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::handshake::machine::RoundResult::Incomplete","value":"RoundResult::Incomplete(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Round done, state unchanged.\n","sig":null,"attributes":[{"value":"/ Round done, state unchanged.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":54967,"byte_end":54999,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55070,"byte_end":55083,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"StageFinished","qualname":"::handshake::machine::RoundResult::StageFinished","value":"RoundResult::StageFinished(StageResult<Obj, Stream>)","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Stage complete.\n","sig":null,"attributes":[{"value":"/ Stage complete.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55046,"byte_end":55065,"line_start":104,"line_end":104,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":54853,"byte_end":54864,"line_start":99,"line_end":99,"column_start":10,"column_end":21},"name":"RoundResult","qualname":"::handshake::machine::RoundResult","value":"pub enum RoundResult<Obj, Stream> {\n\n    /// Round not done, I/O would block.\n    WouldBlock(HandshakeMachine<Stream>),\n\n    /// Round done, state unchanged.\n    Incomplete(HandshakeMachine<Stream>),\n\n    /// Stage complete.\n    StageFinished(StageResult<Obj, Stream>),\n}","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036}],"decl_id":null,"docs":" The result of the round.\n","sig":null,"attributes":[{"value":"/ The result of the round.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":54798,"byte_end":54826,"line_start":97,"line_end":97,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55232,"byte_end":55243,"line_start":112,"line_end":112,"column_start":5,"column_end":16},"name":"DoneReading","qualname":"::handshake::machine::StageResult::DoneReading","value":"StageResult::DoneReading { result, stream, tail }","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" Reading round finished.\n","sig":null,"attributes":[{"value":"/ Reading round finished.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55200,"byte_end":55227,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55328,"byte_end":55339,"line_start":114,"line_end":114,"column_start":5,"column_end":16},"name":"DoneWriting","qualname":"::handshake::machine::StageResult::DoneWriting","value":"StageResult::DoneWriting(Stream)","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" Writing round finished.\n","sig":null,"attributes":[{"value":"/ Writing round finished.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55296,"byte_end":55323,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55169,"byte_end":55180,"line_start":110,"line_end":110,"column_start":10,"column_end":21},"name":"StageResult","qualname":"::handshake::machine::StageResult","value":"pub enum StageResult<Obj, Stream> {\n\n    /// Reading round finished.\n    DoneReading {\n        result: Obj,\n        stream: Stream,\n        tail: Vec<u8>,\n    },\n\n    /// Writing round finished.\n    DoneWriting(Stream),\n}","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1050}],"decl_id":null,"docs":" The result of the stage.\n","sig":null,"attributes":[{"value":"/ The result of the stage.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55114,"byte_end":55142,"line_start":108,"line_end":108,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55388,"byte_end":55396,"line_start":118,"line_end":118,"column_start":11,"column_end":19},"name":"TryParse","qualname":"::handshake::machine::TryParse","value":"TryParse: Sized","parent":null,"children":[{"krate":0,"index":319}],"decl_id":null,"docs":" The parseable object.\n","sig":null,"attributes":[{"value":"/ The parseable object.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55352,"byte_end":55377,"line_start":117,"line_end":117,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55473,"byte_end":55482,"line_start":120,"line_end":120,"column_start":8,"column_end":17},"name":"try_parse","qualname":"::handshake::machine::TryParse::try_parse","value":"pub fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Return Ok(None) if incomplete, Err on syntax error.\n","sig":null,"attributes":[{"value":"/ Return Ok(None) if incomplete, Err on syntax error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55410,"byte_end":55465,"line_start":119,"line_end":119,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22385,"byte_end":22397,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"MidHandshake","qualname":"::handshake::MidHandshake","value":"MidHandshake {  }","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" A WebSocket handshake.\n","sig":null,"attributes":[{"value":"/ A WebSocket handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22330,"byte_end":22356,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22583,"byte_end":22590,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshake<Role>>::get_ref","value":"pub fn get_ref(&Self) -> &HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to machine\n","sig":null,"attributes":[{"value":"/ Allow access to machine","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22544,"byte_end":22571,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22723,"byte_end":22730,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshake<Role>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow mutable access to machine\n","sig":null,"attributes":[{"value":"/ Allow mutable access to machine","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22676,"byte_end":22711,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22875,"byte_end":22884,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshake<Role>>::handshake","value":"pub fn handshake(Self) -> Result<Role::FinalResult, HandshakeError<Role>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22828,"byte_end":22863,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23651,"byte_end":23662,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::handshake::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshake<Role>)","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":" Handshake was interrupted (would block).\n","sig":null,"attributes":[{"value":"/ Handshake was interrupted (would block).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23602,"byte_end":23646,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23714,"byte_end":23721,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Failure","qualname":"::handshake::HandshakeError::Failure","value":"HandshakeError::Failure(Error)","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":" Handshake failed.\n","sig":null,"attributes":[{"value":"/ Handshake failed.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23688,"byte_end":23709,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23560,"byte_end":23574,"line_start":57,"line_end":57,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::handshake::HandshakeError","value":"pub enum HandshakeError<Role: HandshakeRole> {\n\n    /// Handshake was interrupted (would block).\n    Interrupted(MidHandshake<Role>),\n\n    /// Handshake failed.\n    Failure(Error),\n}","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":345}],"decl_id":null,"docs":" A handshake result.\n","sig":null,"attributes":[{"value":"/ A handshake result.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23527,"byte_end":23550,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24651,"byte_end":24664,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"HandshakeRole","qualname":"::handshake::HandshakeRole","value":"HandshakeRole","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":" Handshake role.\n","sig":null,"attributes":[{"value":"/ Handshake role.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24621,"byte_end":24640,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24695,"byte_end":24707,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"IncomingData","qualname":"::handshake::HandshakeRole::IncomingData","value":"type IncomingData: TryParse;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24747,"byte_end":24761,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"InternalStream","qualname":"::handshake::HandshakeRole::InternalStream","value":"type InternalStream: Read + Write;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24805,"byte_end":24816,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"name":"FinalResult","qualname":"::handshake::HandshakeRole::FinalResult","value":"type FinalResult;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24844,"byte_end":24858,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"::handshake::HandshakeRole::stage_finished","value":"pub fn stage_finished(&mut Self,\n                      StageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>, Error>","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25150,"byte_end":25158,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Continue","qualname":"::handshake::ProcessingResult::Continue","value":"ProcessingResult::Continue(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25190,"byte_end":25194,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Done","qualname":"::handshake::ProcessingResult::Done","value":"ProcessingResult::Done(FinalResult)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25106,"byte_end":25122,"line_start":108,"line_end":108,"column_start":10,"column_end":26},"name":"ProcessingResult","qualname":"::handshake::ProcessingResult","value":"pub enum ProcessingResult<Stream, FinalResult> {\n    Continue(HandshakeMachine<Stream>),\n    Done(FinalResult),\n}","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1079}],"decl_id":null,"docs":" Stage processing result.\n","sig":null,"attributes":[{"value":"/ Stage processing result.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25036,"byte_end":25064,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25489,"byte_end":25506,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"derive_accept_key","qualname":"::handshake::derive_accept_key","value":"pub fn derive_accept_key(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","sig":null,"attributes":[{"value":"/ Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25212,"byte_end":25308,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25309,"byte_end":25312,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function can be used to perform a handshake before passing a raw TCP stream to","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25313,"byte_end":25400,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ [`WebSocket::from_raw_socket`][crate::protocol::WebSocket::from_raw_socket].","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":25401,"byte_end":25481,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocol","qualname":"::protocol","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":554},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":1301},{"krate":0,"index":1315},{"krate":0,"index":1313},{"krate":0,"index":1312},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1317},{"krate":0,"index":1325},{"krate":0,"index":1323},{"krate":0,"index":1322},{"krate":0,"index":652},{"krate":0,"index":1327},{"krate":0,"index":1331},{"krate":0,"index":654},{"krate":0,"index":665},{"krate":0,"index":1334},{"krate":0,"index":1342},{"krate":0,"index":671},{"krate":0,"index":1344},{"krate":0,"index":1364},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1356},{"krate":0,"index":1355},{"krate":0,"index":694},{"krate":0,"index":698},{"krate":0,"index":700}],"decl_id":null,"docs":" Generic WebSocket message stream.\n","sig":null,"attributes":[{"value":"/ Generic WebSocket message stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":55726,"byte_end":55763,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::protocol::frame","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":416},{"krate":0,"index":504},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":530},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":1250},{"krate":0,"index":1254},{"krate":0,"index":544}],"decl_id":null,"docs":" Utilities to work with raw WebSocket frames.\n","sig":null,"attributes":[{"value":"/ Utilities to work with raw WebSocket frames.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":85878,"byte_end":85926,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coding","qualname":"::protocol::frame::coding","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":1086},{"krate":0,"index":1103},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1094},{"krate":0,"index":1093},{"krate":0,"index":1105},{"krate":0,"index":1125},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1116},{"krate":0,"index":1115},{"krate":0,"index":1127},{"krate":0,"index":1147},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1138},{"krate":0,"index":1137},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":392},{"krate":0,"index":404},{"krate":0,"index":1149},{"krate":0,"index":1200},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1191},{"krate":0,"index":1190},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":414}],"decl_id":null,"docs":" Various codes defined in RFC 6455.\n","sig":null,"attributes":[{"value":"/ Various codes defined in RFC 6455.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94486,"byte_end":94524,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94720,"byte_end":94724,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Data","qualname":"::protocol::frame::coding::OpCode::Data","value":"OpCode::Data(Data)","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Data (text or binary).\n","sig":null,"attributes":[{"value":"/ Data (text or binary).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94689,"byte_end":94715,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94781,"byte_end":94788,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Control","qualname":"::protocol::frame::coding::OpCode::Control","value":"OpCode::Control(Control)","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Control message (close, ping, pong).\n","sig":null,"attributes":[{"value":"/ Control message (close, ping, pong).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94736,"byte_end":94776,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94676,"byte_end":94682,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::frame::coding::OpCode","value":"pub enum OpCode {\n\n    /// Data (text or binary).\n    Data(Data),\n\n    /// Control message (close, ping, pong).\n    Control(Control),\n}","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1090}],"decl_id":null,"docs":" WebSocket message opcode as in RFC 6455.\n","sig":null,"attributes":[{"value":"/ WebSocket message opcode as in RFC 6455.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94577,"byte_end":94621,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94940,"byte_end":94948,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::frame::coding::Data::Continue","value":"Data::Continue","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" 0x0 denotes a continuation frame\n","sig":null,"attributes":[{"value":"/ 0x0 denotes a continuation frame","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94899,"byte_end":94935,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94987,"byte_end":94991,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::frame::coding::Data::Text","value":"Data::Text","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" 0x1 denotes a text frame\n","sig":null,"attributes":[{"value":"/ 0x1 denotes a text frame","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94954,"byte_end":94982,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95032,"byte_end":95038,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::frame::coding::Data::Binary","value":"Data::Binary","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" 0x2 denotes a binary frame\n","sig":null,"attributes":[{"value":"/ 0x2 denotes a binary frame","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94997,"byte_end":95027,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95102,"byte_end":95110,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Data::Reserved","value":"Data::Reserved(u8)","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" 0x3-7 are reserved for further non-control frames\n","sig":null,"attributes":[{"value":"/ 0x3-7 are reserved for further non-control frames","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95044,"byte_end":95097,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94888,"byte_end":94892,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Data","qualname":"::protocol::frame::coding::Data","value":"pub enum Data {\n\n    /// 0x0 denotes a continuation frame\n    Continue,\n\n    /// 0x1 denotes a text frame\n    Text,\n\n    /// 0x2 denotes a binary frame\n    Binary,\n\n    /// 0x3-7 are reserved for further non-control frames\n    Reserved(u8),\n}","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112}],"decl_id":null,"docs":" Data opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Data opcodes as in RFC 6455","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":94802,"byte_end":94833,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95261,"byte_end":95266,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::frame::coding::Control::Close","value":"Control::Close","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":" 0x8 denotes a connection close\n","sig":null,"attributes":[{"value":"/ 0x8 denotes a connection close","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95222,"byte_end":95256,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95299,"byte_end":95303,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::frame::coding::Control::Ping","value":"Control::Ping","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":" 0x9 denotes a ping\n","sig":null,"attributes":[{"value":"/ 0x9 denotes a ping","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95272,"byte_end":95294,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95336,"byte_end":95340,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::frame::coding::Control::Pong","value":"Control::Pong","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":" 0xa denotes a pong\n","sig":null,"attributes":[{"value":"/ 0xa denotes a pong","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95309,"byte_end":95331,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95400,"byte_end":95408,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Control::Reserved","value":"Control::Reserved(u8)","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":" 0xb-f are reserved for further control frames\n","sig":null,"attributes":[{"value":"/ 0xb-f are reserved for further control frames","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95346,"byte_end":95395,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95208,"byte_end":95215,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Control","qualname":"::protocol::frame::coding::Control","value":"pub enum Control {\n\n    /// 0x8 denotes a connection close\n    Close,\n\n    /// 0x9 denotes a ping\n    Ping,\n\n    /// 0xa denotes a pong\n    Pong,\n\n    /// 0xb-f are reserved for further control frames\n    Reserved(u8),\n}","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134}],"decl_id":null,"docs":" Control opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Control opcodes as in RFC 6455","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95119,"byte_end":95153,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97769,"byte_end":97775,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::frame::coding::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[{"value":"/ Indicates a normal closure, meaning that the purpose for","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97639,"byte_end":97699,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ which the connection was established has been fulfilled.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97704,"byte_end":97764,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97917,"byte_end":97921,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::frame::coding::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is \"going away\", such as a server","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97781,"byte_end":97845,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ going down or a browser having navigated away from a page.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97850,"byte_end":97912,"line_start":124,"line_end":124,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98025,"byte_end":98033,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::frame::coding::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection due","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97927,"byte_end":97991,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ to a protocol error.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97996,"byte_end":98020,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98283,"byte_end":98294,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::frame::coding::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98039,"byte_end":98099,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/ because it has received a type of data it cannot accept (e.g., an","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98104,"byte_end":98173,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ endpoint that understands only text data MAY send this if it","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98178,"byte_end":98242,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ receives a binary message).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98247,"byte_end":98278,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98511,"byte_end":98517,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::frame::coding::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[{"value":"/ Indicates that no status code was included in a closing frame. This","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98300,"byte_end":98371,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ close code makes it possible to use a single method, `on_close` to","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98376,"byte_end":98446,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ handle even cases where no close code was provided.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98451,"byte_end":98506,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98859,"byte_end":98867,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::frame::coding::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[{"value":"/ Indicates an abnormal closure. If the abnormal closure was due to an","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98523,"byte_end":98595,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ error, this close code will not be used. Instead, the `on_error` method","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98600,"byte_end":98675,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ of the handler will be called with the error. However, if the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98680,"byte_end":98756,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ is simply dropped, without an error, this close code will be sent to the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98761,"byte_end":98837,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ handler.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98842,"byte_end":98854,"line_start":142,"line_end":142,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99119,"byte_end":99126,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::frame::coding::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n data within a text message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98873,"byte_end":98933,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/ because it has received data within a message that was not","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":98938,"byte_end":99000,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99005,"byte_end":99077,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ data within a text message).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99082,"byte_end":99114,"line_start":147,"line_end":147,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99483,"byte_end":99489,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::frame::coding::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99132,"byte_end":99192,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that violates its policy.  This","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99197,"byte_end":99266,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ is a generic status code that can be returned when there is no","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99271,"byte_end":99337,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ other more suitable status code (e.g., Unsupported or Size) or if there","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99342,"byte_end":99417,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ is a need to hide specific details about the policy.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99422,"byte_end":99478,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99645,"byte_end":99649,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::frame::coding::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99495,"byte_end":99555,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that is too big for it to","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99560,"byte_end":99623,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/ process.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99628,"byte_end":99640,"line_start":157,"line_end":157,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100124,"byte_end":100133,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::frame::coding::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint (client) is terminating the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99655,"byte_end":99713,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ connection because it has expected the server to negotiate one or","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99718,"byte_end":99787,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ more extension, but the server didn't return them in the response","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99792,"byte_end":99861,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ message of the WebSocket handshake.  The list of extensions that","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99866,"byte_end":99934,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ are needed should be given as the reason for closing.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":99939,"byte_end":99996,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ Note that this status code is not used by the server, because it","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100001,"byte_end":100069,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ can fail the WebSocket handshake instead.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100074,"byte_end":100119,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100311,"byte_end":100316,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::frame::coding::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[{"value":"/ Indicates that a server is terminating the connection because","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100139,"byte_end":100204,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ it encountered an unexpected condition that prevented it from","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100209,"byte_end":100274,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ fulfilling the request.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100279,"byte_end":100306,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100496,"byte_end":100503,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::frame::coding::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is restarting. A client may choose to reconnect,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100322,"byte_end":100400,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ and if it does, it should use a randomized delay of 5-30 seconds between attempts.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100405,"byte_end":100491,"line_start":172,"line_end":172,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100724,"byte_end":100729,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::frame::coding::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is overloaded and the client should either connect","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100509,"byte_end":100589,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ to a different IP (when multiple targets exist), or reconnect to the same IP","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100594,"byte_end":100674,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ when a user has performed an action.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100679,"byte_end":100719,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100754,"byte_end":100757,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::frame::coding::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100782,"byte_end":100790,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::CloseCode::Reserved","value":"CloseCode::Reserved(u16)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100820,"byte_end":100824,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Iana","qualname":"::protocol::frame::coding::CloseCode::Iana","value":"CloseCode::Iana(u16)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100854,"byte_end":100861,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"Library","qualname":"::protocol::frame::coding::CloseCode::Library","value":"CloseCode::Library(u16)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100891,"byte_end":100894,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::frame::coding::CloseCode::Bad","value":"CloseCode::Bad(u16)","parent":{"krate":0,"index":1149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97623,"byte_end":97632,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::frame::coding::CloseCode","value":"pub enum CloseCode {\n\n    /// Indicates a normal closure, meaning that the purpose for\n    /// which the connection was established has been fulfilled.\n    Normal,\n\n    /// Indicates that an endpoint is \"going away\", such as a server\n    /// going down or a browser having navigated away from a page.\n    Away,\n\n    /// Indicates that an endpoint is terminating the connection due\n    /// to a protocol error.\n    Protocol,\n\n    /// Indicates that an endpoint is terminating the connection\n    /// because it has received a type of data it cannot accept (e.g., an\n    /// endpoint that understands only text data MAY send this if it\n    /// receives a binary message).\n    Unsupported,\n\n    /// Indicates that no status code was included in a closing frame. This\n    /// close code makes it possible to use a single method, `on_close` to\n    /// handle even cases where no close code was provided.\n    Status,\n\n    /// Indicates an abnormal closure. If the abnormal closure was due to an\n    /// error, this close code will not be used. Instead, the `on_error` method\n    /// of the handler will be called with the error. However, if the connection\n    /// is simply dropped, without an error, this close code will be sent to the\n    /// handler.\n    Abnormal,\n\n    /// Indicates that an endpoint is terminating the connection\n    /// because it has received data within a message that was not\n    /// consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n    /// data within a text message).\n    Invalid,\n\n    /// Indicates that an endpoint is terminating the connection\n    /// because it has received a message that violates its policy.  This\n    /// is a generic status code that can be returned when there is no\n    /// other more suitable status code (e.g., Unsupported or Size) or if there\n    /// is a need to hide specific details about the policy.\n    Policy,\n\n    /// Indicates that an endpoint is terminating the connection\n    /// because it has received a message that is too big for it to\n    /// process.\n    Size,\n\n    /// Indicates that an endpoint (client) is terminating the\n    /// connection because it has expected the server to negotiate one or\n    /// more extension, but the server didn't return them in the response\n    /// message of the WebSocket handshake.  The list of extensions that\n    /// are needed should be given as the reason for closing.\n    /// Note that this status code is not used by the server, because it\n    /// can fail the WebSocket handshake instead.\n    Extension,\n\n    /// Indicates that a server is terminating the connection because\n    /// it encountered an unexpected condition that prevented it from\n    /// fulfilling the request.\n    Error,\n\n    /// Indicates that the server is restarting. A client may choose to reconnect,\n    /// and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n    Restart,\n\n    /// Indicates that the server is overloaded and the client should either connect\n    /// to a different IP (when multiple targets exist), or reconnect to the same IP\n    /// when a user has performed an action.\n    Again,\n\n    #[doc(hidden)]\n    Tls,\n\n    #[doc(hidden)]\n    Reserved(u16),\n\n    #[doc(hidden)]\n    Iana(u16),\n\n    #[doc(hidden)]\n    Library(u16),\n\n    #[doc(hidden)]\n    Bad(u16),\n}","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"/ Status code used to indicate why an endpoint is closing the WebSocket connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":97483,"byte_end":97568,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100976,"byte_end":100986,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_allowed","qualname":"<CloseCode>::is_allowed","value":"pub fn is_allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this CloseCode is allowed.\n","sig":null,"attributes":[{"value":"/ Check if this CloseCode is allowed.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100925,"byte_end":100964,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":103888,"byte_end":103898,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"CloseFrame","qualname":"::protocol::frame::frame::CloseFrame","value":"CloseFrame { code, reason }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"decl_id":null,"docs":" A struct representing the close command.\n","sig":null,"attributes":[{"value":"/ A struct representing the close command.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":103793,"byte_end":103837,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":103943,"byte_end":103947,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"code","qualname":"::protocol::frame::frame::CloseFrame::code","value":"protocol::frame::coding::CloseCode","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The reason as a code.\n","sig":null,"attributes":[{"value":"/ The reason as a code.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":103909,"byte_end":103934,"line_start":21,"line_end":21,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104003,"byte_end":104009,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"reason","qualname":"::protocol::frame::frame::CloseFrame::reason","value":"std::borrow::Cow<'t, str>","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The reason as text string.\n","sig":null,"attributes":[{"value":"/ The reason as text string.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":103964,"byte_end":103994,"line_start":23,"line_end":23,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104102,"byte_end":104112,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<CloseFrame>::into_owned","value":"pub fn into_owned(Self) -> CloseFrame","parent":null,"children":[],"decl_id":null,"docs":" Convert into a owned string.\n","sig":null,"attributes":[{"value":"/ Convert into a owned string.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104058,"byte_end":104090,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104523,"byte_end":104534,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"FrameHeader","qualname":"::protocol::frame::frame::FrameHeader","value":"FrameHeader { is_final, rsv1, rsv2, rsv3, opcode, mask }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"decl_id":null,"docs":" A struct representing a WebSocket frame header.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104397,"byte_end":104448,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104449,"byte_end":104487,"line_start":41,"line_end":41,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104628,"byte_end":104636,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"is_final","qualname":"::protocol::frame::frame::FrameHeader::is_final","value":"bool","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" Indicates that the frame is the last one of a possibly fragmented message.\n","sig":null,"attributes":[{"value":"/ Indicates that the frame is the last one of a possibly fragmented message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104541,"byte_end":104619,"line_start":44,"line_end":44,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104694,"byte_end":104698,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"rsv1","qualname":"::protocol::frame::frame::FrameHeader::rsv1","value":"bool","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104648,"byte_end":104685,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104756,"byte_end":104760,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"rsv2","qualname":"::protocol::frame::frame::FrameHeader::rsv2","value":"bool","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104710,"byte_end":104747,"line_start":48,"line_end":48,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104818,"byte_end":104822,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"rsv3","qualname":"::protocol::frame::frame::FrameHeader::rsv3","value":"bool","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104772,"byte_end":104809,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104873,"byte_end":104879,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"opcode","qualname":"::protocol::frame::frame::FrameHeader::opcode","value":"protocol::frame::coding::OpCode","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" WebSocket protocol opcode.\n","sig":null,"attributes":[{"value":"/ WebSocket protocol opcode.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104834,"byte_end":104864,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104927,"byte_end":104931,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"name":"mask","qualname":"::protocol::frame::frame::FrameHeader::mask","value":"std::option::Option<[u8; 4]>","parent":{"krate":0,"index":1223},"children":[],"decl_id":null,"docs":" A frame mask, if any.\n","sig":null,"attributes":[{"value":"/ A frame mask, if any.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104893,"byte_end":104918,"line_start":54,"line_end":54,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105451,"byte_end":105456,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"parse","qualname":"<FrameHeader>::parse","value":"pub fn parse<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Cursor<impl AsRef<[u8]>>)\n-> Result<Option<(Self, u64)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a header from an input stream.\n Returns `None` if insufficient data and does not consume anything in this case.\n Payload size is returned along with the header.\n","sig":null,"attributes":[{"value":"/ Parse a header from an input stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105255,"byte_end":105295,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/ Returns `None` if insufficient data and does not consume anything in this case.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105300,"byte_end":105383,"line_start":73,"line_end":73,"column_start":5,"column_end":88}},{"value":"/ Payload size is returned along with the header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105388,"byte_end":105439,"line_start":74,"line_end":74,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105851,"byte_end":105854,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameHeader>::len","value":"pub fn len(&Self, u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the header formatted with given payload length.\n","sig":null,"attributes":[{"value":"/ Get the size of the header formatted with given payload length.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105772,"byte_end":105839,"line_start":86,"line_end":86,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":106053,"byte_end":106059,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<FrameHeader>::format","value":"pub fn format<impl Write: Write>(&Self, u64, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Format a header for given payload size.\n","sig":null,"attributes":[{"value":"/ Format a header for given payload size.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105998,"byte_end":106041,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109482,"byte_end":109487,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"Frame","qualname":"::protocol::frame::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109402,"byte_end":109446,"line_start":200,"line_end":200,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109685,"byte_end":109688,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"/ Get the length of the frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109557,"byte_end":109589,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/ This is the length of the header + the length of the payload.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109594,"byte_end":109659,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109664,"byte_end":109673,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109865,"byte_end":109873,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the frame is empty.\n","sig":null,"attributes":[{"value":"/ Check if the frame is empty.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109807,"byte_end":109839,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109844,"byte_end":109853,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109994,"byte_end":110000,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"header","qualname":"<Frame>::header","value":"pub fn header(&Self) -> &FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109926,"byte_end":109968,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109973,"byte_end":109982,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110134,"byte_end":110144,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Frame>::header_mut","value":"pub fn header_mut(&mut Self) -> &mut FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's header.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110058,"byte_end":110108,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110113,"byte_end":110122,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110283,"byte_end":110290,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"pub fn payload(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's payload.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110214,"byte_end":110257,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110262,"byte_end":110271,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110422,"byte_end":110433,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"pub fn payload_mut(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's payload.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110345,"byte_end":110396,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":110401,"byte_end":110410,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111393,"byte_end":111402,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as binary.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as binary.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111318,"byte_end":111367,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111372,"byte_end":111381,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111529,"byte_end":111540,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Frame>::into_string","value":"pub fn into_string(Self) -> StdResult<String, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as string.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as string.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111454,"byte_end":111503,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":111508,"byte_end":111517,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112287,"byte_end":112294,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"pub fn message(Vec<u8>, OpCode, bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"/ Create a new data frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112233,"byte_end":112261,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112266,"byte_end":112275,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112619,"byte_end":112623,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"pub fn pong(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Pong control frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112557,"byte_end":112593,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112598,"byte_end":112607,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112922,"byte_end":112926,"line_start":320,"line_end":320,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"pub fn ping(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Ping control frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112860,"byte_end":112896,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":112901,"byte_end":112910,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113226,"byte_end":113231,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"pub fn close(Option<CloseFrame>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Close control frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113163,"byte_end":113200,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113205,"byte_end":113214,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113735,"byte_end":113747,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"from_payload","qualname":"<Frame>::from_payload","value":"pub fn from_payload(FrameHeader, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a frame from given header and data.\n","sig":null,"attributes":[{"value":"/ Create a frame from given header and data.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113677,"byte_end":113723,"line_start":345,"line_end":345,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113887,"byte_end":113893,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"pub fn format<impl Write: Write>(Self, &mut impl Write) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[{"value":"/ Write a frame out to a buffer","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":113842,"byte_end":113875,"line_start":350,"line_end":350,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86310,"byte_end":86321,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"FrameSocket","qualname":"::protocol::frame::FrameSocket","value":"FrameSocket {  }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A reader and writer for WebSocket frames.\n","sig":null,"attributes":[{"value":"/ A reader and writer for WebSocket frames.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86236,"byte_end":86281,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86540,"byte_end":86543,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameSocket<Stream>>::new","value":"pub fn new(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86498,"byte_end":86528,"line_start":26,"line_end":26,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86705,"byte_end":86724,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<FrameSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket from partially read data.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket from partially read data.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86638,"byte_end":86693,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86903,"byte_end":86913,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameSocket<Stream>>::into_inner","value":"pub fn into_inner(Self) -> (Stream, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Extract a stream from the socket.\n","sig":null,"attributes":[{"value":"/ Extract a stream from the socket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86854,"byte_end":86891,"line_start":36,"line_end":36,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87072,"byte_end":87079,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87009,"byte_end":87060,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87196,"byte_end":87203,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87132,"byte_end":87184,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87370,"byte_end":87380,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"read_frame","qualname":"<FrameSocket<Stream>>::read_frame","value":"pub fn read_frame(&mut Self, Option<usize>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Read a frame from stream.\n","sig":null,"attributes":[{"value":"/ Read a frame from stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87329,"byte_end":87358,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87839,"byte_end":87850,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<FrameSocket<Stream>>::write_frame","value":"pub fn write_frame(&mut Self, Frame) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame to stream.","sig":null,"attributes":[{"value":"/ Write a frame to stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87575,"byte_end":87603,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87608,"byte_end":87611,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the frame is queued regardless of any errors.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87616,"byte_end":87695,"line_start":68,"line_end":68,"column_start":5,"column_end":84}},{"value":"/ There is no need to resend the frame. In order to handle WouldBlock or Incomplete,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87700,"byte_end":87786,"line_start":69,"line_end":69,"column_start":5,"column_end":91}},{"value":"/ call write_pending() afterwards.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87791,"byte_end":87827,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":88006,"byte_end":88019,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<FrameSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Complete pending write, if any.\n","sig":null,"attributes":[{"value":"/ Complete pending write, if any.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87959,"byte_end":87994,"line_start":75,"line_end":75,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":123968,"byte_end":123972,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[{"value":"/ A text WebSocket message","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":123935,"byte_end":123963,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124021,"byte_end":124027,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[{"value":"/ A binary WebSocket message","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":123986,"byte_end":124016,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124164,"byte_end":124168,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::message::Message::Ping","value":"Message::Ping(Vec<u8>)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" A ping message with the specified payload","sig":null,"attributes":[{"value":"/ A ping message with the specified payload","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124042,"byte_end":124087,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124092,"byte_end":124095,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124100,"byte_end":124159,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124305,"byte_end":124309,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::message::Message::Pong","value":"Message::Pong(Vec<u8>)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" A pong message with the specified payload","sig":null,"attributes":[{"value":"/ A pong message with the specified payload","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124183,"byte_end":124228,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124233,"byte_end":124236,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124241,"byte_end":124300,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124379,"byte_end":124384,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::message::Message::Close","value":"Message::Close(Option<CloseFrame>)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" A close message with the optional close frame.\n","sig":null,"attributes":[{"value":"/ A close message with the optional close frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124324,"byte_end":124374,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":123921,"byte_end":123928,"line_start":160,"line_end":160,"column_start":10,"column_end":17},"name":"Message","qualname":"::protocol::message::Message","value":"pub enum Message {\n\n    /// A text WebSocket message\n    Text(String),\n\n    /// A binary WebSocket message\n    Binary(Vec<u8>),\n\n    /// A ping message with the specified payload\n    ///\n    /// The payload here must have a length less than 125 bytes\n    Ping(Vec<u8>),\n\n    /// A pong message with the specified payload\n    ///\n    /// The payload here must have a length less than 125 bytes\n    Pong(Vec<u8>),\n\n    /// A close message with the optional close frame.\n    Close(Option<CloseFrame>),\n}","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"/ An enum representing the various forms of a WebSocket message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":123806,"byte_end":123872,"line_start":158,"line_end":158,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124507,"byte_end":124511,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"pub fn text<S>(S) -> Message where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[{"value":"/ Create a new text WebSocket message from a stringable.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124437,"byte_end":124495,"line_start":178,"line_end":178,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124705,"byte_end":124711,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"pub fn binary<B>(B) -> Message where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[{"value":"/ Create a new binary WebSocket message by converting to Vec<u8>.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124626,"byte_end":124693,"line_start":186,"line_end":186,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124885,"byte_end":124892,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a text message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124823,"byte_end":124873,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125027,"byte_end":125036,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"pub fn is_binary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a binary message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124963,"byte_end":125015,"line_start":199,"line_end":199,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125171,"byte_end":125178,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"is_ping","qualname":"<Message>::is_ping","value":"pub fn is_ping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a ping message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a ping message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125109,"byte_end":125159,"line_start":204,"line_end":204,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125311,"byte_end":125318,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_pong","qualname":"<Message>::is_pong","value":"pub fn is_pong(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a pong message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a pong message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125249,"byte_end":125299,"line_start":209,"line_end":209,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125452,"byte_end":125460,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"is_close","qualname":"<Message>::is_close","value":"pub fn is_close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message ia s close message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message ia s close message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125389,"byte_end":125440,"line_start":214,"line_end":214,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125588,"byte_end":125591,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[{"value":"/ Get the length of the WebSocket message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125532,"byte_end":125576,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":126084,"byte_end":126092,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[{"value":"/ Returns true if the WebSocket message has no content.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125936,"byte_end":125993,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ For example, if the other side of the connection sent an empty string.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":125998,"byte_end":126072,"line_start":231,"line_end":231,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":126212,"byte_end":126221,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"pub fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[{"value":"/ Consume the WebSocket and return it as binary data.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":126145,"byte_end":126200,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":126643,"byte_end":126652,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"pub fn into_text(Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[{"value":"/ Attempt to consume the WebSocket message and convert it to a String.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":126559,"byte_end":126631,"line_start":246,"line_end":246,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127192,"byte_end":127199,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Message>::to_text","value":"pub fn to_text(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[{"value":"/ Attempt to get a &str from the WebSocket message,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127073,"byte_end":127126,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ this will try to convert binary data to utf8.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127131,"byte_end":127180,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56401,"byte_end":56407,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Server","qualname":"::protocol::Role::Server","value":"Role::Server","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" This socket is a server\n","sig":null,"attributes":[{"value":"/ This socket is a server","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56369,"byte_end":56396,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56445,"byte_end":56451,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Client","qualname":"::protocol::Role::Client","value":"Role::Client","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" This socket is a client\n","sig":null,"attributes":[{"value":"/ This socket is a client","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56413,"byte_end":56440,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56358,"byte_end":56362,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Role","qualname":"::protocol::Role","value":"pub enum Role {\n\n    /// This socket is a server\n    Server,\n\n    /// This socket is a client\n    Client,\n}","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1304}],"decl_id":null,"docs":" Indicates a Client or Server role of the websocket\n","sig":null,"attributes":[{"value":"/ Indicates a Client or Server role of the websocket","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56249,"byte_end":56303,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56545,"byte_end":56560,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"WebSocketConfig","qualname":"::protocol::WebSocketConfig","value":"WebSocketConfig { max_send_queue, max_message_size, max_frame_size, accept_unmasked_frames }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"decl_id":null,"docs":" The configuration for WebSocket connection.\n","sig":null,"attributes":[{"value":"/ The configuration for WebSocket connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56456,"byte_end":56503,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56781,"byte_end":56795,"line_start":43,"line_end":43,"column_start":9,"column_end":23},"name":"max_send_queue","qualname":"::protocol::WebSocketConfig::max_send_queue","value":"std::option::Option<usize>","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" The size of the send queue. You can use it to turn on/off the backpressure features. `None`\n means here that the size of the queue is unlimited. The default value is the unlimited\n queue.\n","sig":null,"attributes":[{"value":"/ The size of the send queue. You can use it to turn on/off the backpressure features. `None`","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56567,"byte_end":56662,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ means here that the size of the queue is unlimited. The default value is the unlimited","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56667,"byte_end":56757,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ queue.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56762,"byte_end":56772,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57050,"byte_end":57066,"line_start":47,"line_end":47,"column_start":9,"column_end":25},"name":"max_message_size","qualname":"::protocol::WebSocketConfig::max_message_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" The maximum size of a message. `None` means no size limit. The default value is 64 MiB\n which should be reasonably big for all normal use-cases but small enough to prevent\n memory eating by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a message. `None` means no size limit. The default value is 64 MiB","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56816,"byte_end":56906,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ which should be reasonably big for all normal use-cases but small enough to prevent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":56911,"byte_end":56998,"line_start":45,"line_end":45,"column_start":5,"column_end":92}},{"value":"/ memory eating by a malicious user.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57003,"byte_end":57041,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57405,"byte_end":57419,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::protocol::WebSocketConfig::max_frame_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" The maximum size of a single message frame. `None` means no size limit. The limit is for\n frame payload NOT including the frame header. The default value is 16 MiB which should\n be reasonably big for all normal use-cases but small enough to prevent memory eating\n by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a single message frame. `None` means no size limit. The limit is for","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57087,"byte_end":57179,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ frame payload NOT including the frame header. The default value is 16 MiB which should","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57184,"byte_end":57274,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ be reasonably big for all normal use-cases but small enough to prevent memory eating","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57279,"byte_end":57367,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ by a malicious user.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57372,"byte_end":57396,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57841,"byte_end":57863,"line_start":58,"line_end":58,"column_start":9,"column_end":31},"name":"accept_unmasked_frames","qualname":"::protocol::WebSocketConfig::accept_unmasked_frames","value":"bool","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":" When set to `true`, the server will accept and handle unmasked frames\n from the client. According to the RFC 6455, the server must close the\n connection to the client in such cases, however it seems like there are\n some popular libraries that are sending unmasked frames, ignoring the RFC.\n By default this option is set to `false`, i.e. according to RFC 6455.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the server will accept and handle unmasked frames","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57440,"byte_end":57513,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ from the client. According to the RFC 6455, the server must close the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57518,"byte_end":57591,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ connection to the client in such cases, however it seems like there are","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57596,"byte_end":57671,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ some popular libraries that are sending unmasked frames, ignoring the RFC.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57676,"byte_end":57754,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ By default this option is set to `false`, i.e. according to RFC 6455.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57759,"byte_end":57832,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58380,"byte_end":58389,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::protocol::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":" WebSocket input-output stream.","sig":null,"attributes":[{"value":"/ WebSocket input-output stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58148,"byte_end":58182,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58183,"byte_end":58186,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is THE structure you want to create to be able to speak the WebSocket protocol.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58187,"byte_end":58275,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ It may be created by calling `connect`, `accept` or `client` functions.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58276,"byte_end":58351,"line_start":75,"line_end":75,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58908,"byte_end":58923,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"from_raw_socket","qualname":"<WebSocket<Stream>>::from_raw_socket","value":"pub fn from_raw_socket(Stream, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58568,"byte_end":58641,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58646,"byte_end":58649,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58654,"byte_end":58733,"line_start":87,"line_end":87,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58738,"byte_end":58813,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58818,"byte_end":58896,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59429,"byte_end":59448,"line_start":99,"line_end":99,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocket<Stream>>::from_partially_read","value":"pub fn from_partially_read(Stream, Vec<u8>, Role, Option<WebSocketConfig>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59089,"byte_end":59162,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59167,"byte_end":59170,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59175,"byte_end":59254,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59259,"byte_end":59334,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59339,"byte_end":59417,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59786,"byte_end":59793,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WebSocket<Stream>>::get_ref","value":"pub fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59723,"byte_end":59774,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59909,"byte_end":59916,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WebSocket<Stream>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59845,"byte_end":59897,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60022,"byte_end":60032,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocket<Stream>>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":59981,"byte_end":60010,"line_start":120,"line_end":120,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60183,"byte_end":60193,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocket<Stream>>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60144,"byte_end":60171,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60517,"byte_end":60525,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocket<Stream>>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60268,"byte_end":60313,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60318,"byte_end":60321,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60326,"byte_end":60412,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60417,"byte_end":60505,"line_start":133,"line_end":133,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60741,"byte_end":60750,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocket<Stream>>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60586,"byte_end":60632,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60637,"byte_end":60640,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60645,"byte_end":60729,"line_start":140,"line_end":140,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61727,"byte_end":61739,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocket<Stream>>::read_message","value":"pub fn read_message(&mut Self) -> Result<Message>","parent":null,"children":[],"decl_id":null,"docs":" Read a message from stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from stream, if possible.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60861,"byte_end":60905,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60910,"byte_end":60913,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will queue responses to ping and close messages to be sent. It will call","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60918,"byte_end":60999,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ `write_pending` before trying to read in order to make sure that those responses","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61004,"byte_end":61088,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ make progress even if you never call `write_pending`. That does mean that they","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61093,"byte_end":61175,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ get sent out earliest on the next call to `read_message`, `write_message` or `write_pending`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61180,"byte_end":61277,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61282,"byte_end":61285,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ## Closing the connection","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61290,"byte_end":61319,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ When the remote endpoint decides to close the connection this will return","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61324,"byte_end":61401,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ the close message with an optional close frame.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61406,"byte_end":61457,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61462,"byte_end":61465,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ You should continue calling `read_message`, `write_message` or `write_pending` to drive","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61470,"byte_end":61561,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ the reply to the close frame until [Error::ConnectionClosed] is returned. Once that happens","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61566,"byte_end":61661,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ it is safe to drop the underlying connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61666,"byte_end":61715,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63763,"byte_end":63776,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocket<Stream>>::write_message","value":"pub fn write_message(&mut Self, Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to stream, if possible.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61835,"byte_end":61877,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61882,"byte_end":61885,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61890,"byte_end":61984,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ requests. A Pong reply will jump the queue because the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":61989,"byte_end":62047,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ [websocket RFC](https://tools.ietf.org/html/rfc6455#section-5.5.2) specifies it should be sent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62052,"byte_end":62150,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ as soon as is practical.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62155,"byte_end":62183,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62188,"byte_end":62191,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that upon receiving a ping message, tungstenite cues a pong reply automatically.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62196,"byte_end":62285,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ When you call either `read_message`, `write_message` or `write_pending` next it will try to send","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62290,"byte_end":62390,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"/ that pong out if the underlying connection can take more data. This means you should not","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62395,"byte_end":62487,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ respond to ping frames manually.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62492,"byte_end":62528,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62533,"byte_end":62536,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ You can however send pong frames manually in order to indicate a unidirectional heartbeat","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62541,"byte_end":62634,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ as described in [RFC 6455](https://tools.ietf.org/html/rfc6455#section-5.5.3). Note that","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62639,"byte_end":62731,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ if `read_message` returns a ping, you should call `write_pending` until it doesn't return","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62736,"byte_end":62829,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ WouldBlock before passing a pong to `write_message`, otherwise the response to the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62834,"byte_end":62920,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ ping will not be sent, but rather replaced by your custom pong message.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":62925,"byte_end":63000,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63005,"byte_end":63008,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63013,"byte_end":63026,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ - If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63031,"byte_end":63108,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63113,"byte_end":63204,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ - If the connection is closed and should be dropped, this will return [Error::ConnectionClosed].","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63209,"byte_end":63309,"line_start":186,"line_end":186,"column_start":5,"column_end":105}},{"value":"/ - If you try again after [Error::ConnectionClosed] was returned either from here or from `read_message`,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63314,"byte_end":63422,"line_start":187,"line_end":187,"column_start":5,"column_end":113}},{"value":"/   [Error::AlreadyClosed] will be returned. This indicates a program error on your part.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63427,"byte_end":63518,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ - [Error::Io] is returned if the underlying connection returns an error","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63523,"byte_end":63598,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/   (consider these fatal except for WouldBlock).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63603,"byte_end":63654,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ - [Error::Capacity] if your message size is bigger than the configured max message size.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63659,"byte_end":63751,"line_start":191,"line_end":191,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63940,"byte_end":63953,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocket<Stream>>::write_pending","value":"pub fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":63895,"byte_end":63928,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65158,"byte_end":65163,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket<Stream>>::close","value":"pub fn close(&mut Self, Option<CloseFrame>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64045,"byte_end":64070,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64075,"byte_end":64078,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64083,"byte_end":64148,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64153,"byte_end":64216,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write_message(Message::Close(..))`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64221,"byte_end":64281,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64286,"byte_end":64289,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ After queing the close frame you should continue calling `read_message` or","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64294,"byte_end":64372,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ `write_pending` to drive the close handshake to completion.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64377,"byte_end":64440,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64445,"byte_end":64448,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The websocket RFC defines that the underlying connection should be closed","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64453,"byte_end":64530,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ by the server. Tungstenite takes care of this asymmetry for you.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64535,"byte_end":64603,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64608,"byte_end":64611,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When the close handshake is finished (we have both sent and received","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64616,"byte_end":64688,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ a close message), `read_message` or `write_pending` will return","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64693,"byte_end":64760,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ [Error::ConnectionClosed] if this endpoint is the server.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64765,"byte_end":64826,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64831,"byte_end":64834,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If this endpoint is a client, [Error::ConnectionClosed] will only be","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64839,"byte_end":64911,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ returned after the server has closed the underlying connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64916,"byte_end":64983,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64988,"byte_end":64991,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is thus safe to drop the underlying connection as soon as [Error::ConnectionClosed]","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":64996,"byte_end":65086,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ is returned from `read_message` or `write_pending`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65091,"byte_end":65146,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65350,"byte_end":65366,"line_start":229,"line_end":229,"column_start":12,"column_end":28},"name":"WebSocketContext","qualname":"::protocol::WebSocketContext","value":"WebSocketContext {  }","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341}],"decl_id":null,"docs":" A context for managing WebSocket stream.\n","sig":null,"attributes":[{"value":"/ A context for managing WebSocket stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65277,"byte_end":65321,"line_start":227,"line_end":227,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65976,"byte_end":65979,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketContext>::new","value":"pub fn new(Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages a post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages a post-handshake stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65896,"byte_end":65964,"line_start":247,"line_end":247,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66427,"byte_end":66446,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocketContext>::from_partially_read","value":"pub fn from_partially_read(Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages an post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages an post-handshake stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66346,"byte_end":66415,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66714,"byte_end":66724,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocketContext>::set_config","value":"pub fn set_config<impl FnOnce(&mut WebSocketConfig): FnOnce(&mut WebSocketConfig)\n                  -> ()>(&mut Self, impl FnOnce(&mut WebSocketConfig))","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66673,"byte_end":66702,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66868,"byte_end":66878,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocketContext>::get_config","value":"pub fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66829,"byte_end":66856,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67189,"byte_end":67197,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocketContext>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66940,"byte_end":66985,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66990,"byte_end":66993,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":66998,"byte_end":67084,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67089,"byte_end":67177,"line_start":281,"line_end":281,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67411,"byte_end":67420,"line_start":289,"line_end":289,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocketContext>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67256,"byte_end":67302,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67307,"byte_end":67310,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67315,"byte_end":67399,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67668,"byte_end":67680,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocketContext>::read_message","value":"pub fn read_message<Stream>(&mut Self, &mut Stream) -> Result<Message> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Read a message from the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from the provided stream, if possible.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67480,"byte_end":67537,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67542,"byte_end":67545,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function sends pong and close responses automatically.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67550,"byte_end":67613,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ However, it never blocks on write.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":67618,"byte_end":67656,"line_start":296,"line_end":296,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68988,"byte_end":69001,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocketContext>::write_message","value":"pub fn write_message<Stream>(&mut Self, &mut Stream, Message) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to the provided stream, if possible.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68457,"byte_end":68512,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68517,"byte_end":68520,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68525,"byte_end":68619,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ and Close requests. If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68624,"byte_end":68719,"line_start":320,"line_end":320,"column_start":5,"column_end":100}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68724,"byte_end":68815,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68820,"byte_end":68823,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that only the last pong frame is stored to be sent, and only the","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68828,"byte_end":68901,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ most recent pong frame is sent if multiple pong frames are queued.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":68906,"byte_end":68976,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":70578,"byte_end":70591,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocketContext>::write_pending","value":"pub fn write_pending<Stream>(&mut Self, &mut Stream) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":70533,"byte_end":70566,"line_start":365,"line_end":365,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72579,"byte_end":72584,"line_start":409,"line_end":409,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocketContext>::close","value":"pub fn close<Stream>(&mut Self, &mut Stream, Option<CloseFrame>) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72339,"byte_end":72364,"line_start":404,"line_end":404,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72369,"byte_end":72372,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72377,"byte_end":72442,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72447,"byte_end":72510,"line_start":407,"line_end":407,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write(Message::Close(..))`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":72515,"byte_end":72567,"line_start":408,"line_end":408,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":1821},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":723}],"decl_id":null,"docs":" Methods to accept an incoming WebSocket connection on a server.\n","sig":null,"attributes":[{"value":"/ Methods to accept an incoming WebSocket connection on a server.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129564,"byte_end":129631,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130322,"byte_end":130340,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"accept_with_config","qualname":"::server::accept_with_config","value":"pub fn accept_with_config<S: Read + Write>(S, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129850,"byte_end":129893,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129894,"byte_end":129897,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129898,"byte_end":129995,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ used by `accept()`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":129996,"byte_end":130019,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130020,"byte_end":130023,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130024,"byte_end":130100,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130101,"byte_end":130178,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130179,"byte_end":130271,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130272,"byte_end":130314,"line_start":22,"line_end":22,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130891,"byte_end":130897,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"accept","qualname":"::server::accept","value":"pub fn accept<S: Read + Write>(S)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130545,"byte_end":130588,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130589,"byte_end":130592,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130593,"byte_end":130669,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130670,"byte_end":130747,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130748,"byte_end":130840,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":130841,"byte_end":130883,"line_start":35,"line_end":35,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131441,"byte_end":131463,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"accept_hdr_with_config","qualname":"::server::accept_hdr_with_config","value":"pub fn accept_hdr_with_config<S: Read + Write,\n                              C: Callback>(S, C, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131047,"byte_end":131090,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131091,"byte_end":131094,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131095,"byte_end":131192,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ used by `accept_hdr()`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131193,"byte_end":131220,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131221,"byte_end":131224,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131225,"byte_end":131300,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131301,"byte_end":131373,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131374,"byte_end":131433,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131963,"byte_end":131973,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"accept_hdr","qualname":"::server::accept_hdr","value":"pub fn accept_hdr<S: Read + Write, C: Callback>(S, C)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>>","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131699,"byte_end":131742,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131743,"byte_end":131746,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131747,"byte_end":131822,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131823,"byte_end":131895,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\server.rs","byte_start":131896,"byte_end":131955,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":1366},{"krate":0,"index":1374},{"krate":0,"index":1373},{"krate":0,"index":1371},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":740},{"krate":0,"index":744},{"krate":0,"index":749}],"decl_id":null,"docs":" Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","sig":null,"attributes":[{"value":"/ Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132158,"byte_end":132241,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132242,"byte_end":132245,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  There is no dependency on actual TLS implementations. Everything like","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132246,"byte_end":132320,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `native_tls` or `openssl` will work as long as there is a TLS stream supporting standard","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132321,"byte_end":132413,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `Read + Write` traits.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132414,"byte_end":132440,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132764,"byte_end":132769,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Mode::Plain","value":"Mode::Plain","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":" Plain mode (`ws://` URL).\n","sig":null,"attributes":[{"value":"/ Plain mode (`ws://` URL).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132730,"byte_end":132759,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132808,"byte_end":132811,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Mode::Tls","value":"Mode::Tls","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":" TLS mode (`wss://` URL).\n","sig":null,"attributes":[{"value":"/ TLS mode (`wss://` URL).","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132775,"byte_end":132803,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132719,"byte_end":132723,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Mode","qualname":"::stream::Mode","value":"pub enum Mode {\n\n    /// Plain mode (`ws://` URL).\n    Plain,\n\n    /// TLS mode (`wss://` URL).\n    Tls,\n}","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":" Stream mode, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream mode, either plain TCP or TLS.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132638,"byte_end":132679,"line_start":16,"line_end":16,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132859,"byte_end":132866,"line_start":26,"line_end":26,"column_start":11,"column_end":18},"name":"NoDelay","qualname":"::stream::NoDelay","value":"NoDelay","parent":null,"children":[{"krate":0,"index":734}],"decl_id":null,"docs":" Trait to switch TCP_NODELAY.\n","sig":null,"attributes":[{"value":"/ Trait to switch TCP_NODELAY.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132816,"byte_end":132848,"line_start":25,"line_end":25,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132931,"byte_end":132942,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::stream::NoDelay::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":" Set the TCP_NODELAY option to the given value.\n","sig":null,"attributes":[{"value":"/ Set the TCP_NODELAY option to the given value.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":132873,"byte_end":132923,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133685,"byte_end":133690,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Stream::Plain","value":"Stream::Plain(S)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":" Unencrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Unencrypted socket stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133650,"byte_end":133680,"line_start":54,"line_end":54,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133732,"byte_end":133735,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Stream::Tls","value":"Stream::Tls(T)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":" Encrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Encrypted socket stream.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133699,"byte_end":133727,"line_start":56,"line_end":56,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133631,"byte_end":133637,"line_start":53,"line_end":53,"column_start":10,"column_end":16},"name":"Stream","qualname":"::stream::Stream","value":"pub enum Stream<S, T> {\n\n    /// Unencrypted socket stream.\n    Plain(S),\n\n    /// Encrypted socket stream.\n    Tls(T),\n}","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Stream, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream, either plain TCP or TLS.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133568,"byte_end":133604,"line_start":51,"line_end":51,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770}],"decl_id":null,"docs":" Helper traits to ease non-blocking handling.\n","sig":null,"attributes":[{"value":"/ Helper traits to ease non-blocking handling.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":134715,"byte_end":134763,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":134933,"byte_end":134949,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"NonBlockingError","qualname":"::util::NonBlockingError","value":"NonBlockingError: Sized","parent":null,"children":[{"krate":0,"index":761}],"decl_id":null,"docs":" Non-blocking IO handling.\n","sig":null,"attributes":[{"value":"/ Non-blocking IO handling.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":134893,"byte_end":134922,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135031,"byte_end":135048,"line_start":13,"line_end":13,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"::util::NonBlockingError::into_non_blocking","value":"pub fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":" Convert WouldBlock to None and don't touch other errors.\n","sig":null,"attributes":[{"value":"/ Convert WouldBlock to None and don't touch other errors.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":134963,"byte_end":135023,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135610,"byte_end":135627,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"name":"NonBlockingResult","qualname":"::util::NonBlockingResult","value":"NonBlockingResult","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"decl_id":null,"docs":" Non-blocking IO wrapper.","sig":null,"attributes":[{"value":"/ Non-blocking IO wrapper.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135499,"byte_end":135527,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135528,"byte_end":135531,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `Result<T, E: NonBlockingError>`.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135532,"byte_end":135599,"line_start":36,"line_end":36,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135700,"byte_end":135706,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::NonBlockingResult::Result","value":"type Result;","parent":{"krate":0,"index":767},"children":[],"decl_id":null,"docs":" Type of the converted result: `Result<Option<T>, E>`\n","sig":null,"attributes":[{"value":"/ Type of the converted result: `Result<Option<T>, E>`","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135634,"byte_end":135690,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135757,"byte_end":135765,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"no_block","qualname":"::util::NonBlockingResult::no_block","value":"pub fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":767},"children":[],"decl_id":null,"docs":" Perform the non-block conversion.\n","sig":null,"attributes":[{"value":"/ Perform the non-block conversion.","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135712,"byte_end":135749,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11054,"byte_end":11060,"line_start":286,"line_end":286,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11364,"byte_end":11367,"line_start":298,"line_end":298,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11649,"byte_end":11652,"line_start":310,"line_end":310,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11789,"byte_end":11796,"line_start":316,"line_end":316,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11924,"byte_end":11931,"line_start":322,"line_end":322,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14819,"byte_end":14824,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14934,"byte_end":14939,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15067,"byte_end":15072,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15230,"byte_end":15235,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15385,"byte_end":15390,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15510,"byte_end":15515,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15662,"byte_end":15667,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15808,"byte_end":15813,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26994,"byte_end":27009,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":28117,"byte_end":28132,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":30450,"byte_end":30460,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":33254,"byte_end":33262,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":33692,"byte_end":33700,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":38251,"byte_end":38260,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":38613,"byte_end":38622,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":43569,"byte_end":43576,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":44003,"byte_end":44010,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45654,"byte_end":45655,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46025,"byte_end":46035,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46894,"byte_end":46909,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47750,"byte_end":47765,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51570,"byte_end":51586,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52335,"byte_end":52351,"line_start":40,"line_end":40,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22519,"byte_end":22531,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23774,"byte_end":23788,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24126,"byte_end":24140,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24451,"byte_end":24465,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24518,"byte_end":24532,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95439,"byte_end":95443,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95782,"byte_end":95789,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96133,"byte_end":96139,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96345,"byte_end":96351,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96872,"byte_end":96878,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100909,"byte_end":100918,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":101106,"byte_end":101115,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":102025,"byte_end":102034,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104037,"byte_end":104047,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104259,"byte_end":104269,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104970,"byte_end":104981,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105237,"byte_end":105248,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":107198,"byte_end":107209,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109545,"byte_end":109550,"line_start":207,"line_end":207,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":114125,"byte_end":114130,"line_start":359,"line_end":359,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":114839,"byte_end":114851,"line_start":392,"line_end":392,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86472,"byte_end":86483,"line_start":25,"line_end":25,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87279,"byte_end":87290,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87524,"byte_end":87535,"line_start":62,"line_end":62,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":88456,"byte_end":88466,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":119377,"byte_end":119392,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":121614,"byte_end":121631,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124423,"byte_end":124430,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127602,"byte_end":127609,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127719,"byte_end":127726,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127838,"byte_end":127845,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127951,"byte_end":127958,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":128063,"byte_end":128070,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":128160,"byte_end":128167,"line_start":302,"line_end":302,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57891,"byte_end":57906,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58544,"byte_end":58553,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60837,"byte_end":60846,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65873,"byte_end":65889,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":82028,"byte_end":82042,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":83023,"byte_end":83029,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133006,"byte_end":133015,"line_start":31,"line_end":31,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133211,"byte_end":133220,"line_start":38,"line_end":38,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133775,"byte_end":133781,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":134030,"byte_end":134036,"line_start":69,"line_end":69,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":134470,"byte_end":134476,"line_start":84,"line_end":84,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135101,"byte_end":135108,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135307,"byte_end":135312,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135825,"byte_end":135834,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":321,"byte_end":327,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":337,"byte_end":342,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":352,"byte_end":361,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22067,"byte_end":22073,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22083,"byte_end":22090,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":189}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22100,"byte_end":22106,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":208}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":371,"byte_end":379,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":366}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":55773,"byte_end":55778,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":367}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":85936,"byte_end":85942,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":389,"byte_end":395,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":703}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":405,"byte_end":411,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":726}},{"kind":"Mod","span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\lib.rs","byte_start":421,"byte_end":425,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":753}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11054,"byte_end":11060,"line_start":286,"line_end":286,"column_start":28,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11364,"byte_end":11367,"line_start":298,"line_end":298,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":13,"index":2638},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11649,"byte_end":11652,"line_start":310,"line_end":310,"column_start":28,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":19,"index":719},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11789,"byte_end":11796,"line_start":316,"line_end":316,"column_start":28,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\client.rs","byte_start":11924,"byte_end":11931,"line_start":322,"line_end":322,"column_start":46,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":34,"index":219},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14819,"byte_end":14824,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":14934,"byte_end":14939,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15067,"byte_end":15072,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15230,"byte_end":15235,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15385,"byte_end":15390,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15510,"byte_end":15515,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15662,"byte_end":15667,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\error.rs","byte_start":15808,"byte_end":15813,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":26994,"byte_end":27009,"line_start":37,"line_end":37,"column_start":23,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":28117,"byte_end":28132,"line_start":72,"line_end":72,"column_start":41,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":990},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":30450,"byte_end":30460,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":33254,"byte_end":33262,"line_start":205,"line_end":205,"column_start":19,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":161},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\client.rs","byte_start":33692,"byte_end":33700,"line_start":216,"line_end":216,"column_start":63,"column_end":71},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":161},"to":{"krate":0,"index":198}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":38079,"byte_end":38084,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":198}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":38251,"byte_end":38260,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":{"Impl":{"id":33}},"from":{"krate":13,"index":1800},"to":{"krate":0,"index":198}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\headers.rs","byte_start":38613,"byte_end":38622,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":13,"index":1800},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":43569,"byte_end":43576,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":44003,"byte_end":44010,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":198}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45272,"byte_end":45277,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":45654,"byte_end":45655,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46025,"byte_end":46035,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":46894,"byte_end":46909,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\server.rs","byte_start":47750,"byte_end":47765,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1009},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":51570,"byte_end":51586,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":52335,"byte_end":52351,"line_start":40,"line_end":40,"column_start":28,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\machine.rs","byte_start":55398,"byte_end":55403,"line_start":118,"line_end":118,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":318}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":22519,"byte_end":22531,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":23774,"byte_end":23788,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24126,"byte_end":24140,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24451,"byte_end":24465,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":340},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\handshake\\mod.rs","byte_start":24518,"byte_end":24532,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95439,"byte_end":95443,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":95782,"byte_end":95789,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1127},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96133,"byte_end":96139,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96345,"byte_end":96351,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":1986}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":96872,"byte_end":96878,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":100909,"byte_end":100918,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":101106,"byte_end":101115,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\coding.rs","byte_start":102025,"byte_end":102034,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104037,"byte_end":104047,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104259,"byte_end":104269,"line_start":34,"line_end":34,"column_start":27,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":104970,"byte_end":104981,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":105237,"byte_end":105248,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":107198,"byte_end":107209,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":109545,"byte_end":109550,"line_start":207,"line_end":207,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":114125,"byte_end":114130,"line_start":359,"line_end":359,"column_start":23,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\frame.rs","byte_start":114839,"byte_end":114851,"line_start":392,"line_end":392,"column_start":6,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":86472,"byte_end":86483,"line_start":25,"line_end":25,"column_start":14,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87279,"byte_end":87290,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":87524,"byte_end":87535,"line_start":62,"line_end":62,"column_start":14,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\frame\\mod.rs","byte_start":88456,"byte_end":88466,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":119377,"byte_end":119392,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":121614,"byte_end":121631,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":124423,"byte_end":124430,"line_start":177,"line_end":177,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127602,"byte_end":127609,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127719,"byte_end":127726,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127838,"byte_end":127845,"line_start":284,"line_end":284,"column_start":29,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":127951,"byte_end":127958,"line_start":290,"line_end":290,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":128063,"byte_end":128070,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1986}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\message.rs","byte_start":128160,"byte_end":128167,"line_start":302,"line_end":302,"column_start":23,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":57891,"byte_end":57906,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1317},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":58544,"byte_end":58553,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":60837,"byte_end":60846,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":65873,"byte_end":65889,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":82028,"byte_end":82042,"line_start":627,"line_end":627,"column_start":6,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\protocol\\mod.rs","byte_start":83023,"byte_end":83029,"line_start":654,"line_end":654,"column_start":34,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":698}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133006,"byte_end":133015,"line_start":31,"line_end":31,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":1,"index":3707},"to":{"krate":0,"index":733}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133211,"byte_end":133220,"line_start":38,"line_end":38,"column_start":45,"column_end":54},"kind":{"Impl":{"id":86}},"from":{"krate":28,"index":196},"to":{"krate":0,"index":733}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":133775,"byte_end":133781,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":1,"index":3117}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":134030,"byte_end":134036,"line_start":69,"line_end":69,"column_start":36,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":1,"index":3176}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\stream.rs","byte_start":134470,"byte_end":134476,"line_start":84,"line_end":84,"column_start":42,"column_end":48},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":733}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":134951,"byte_end":134956,"line_start":11,"line_end":11,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":760}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135101,"byte_end":135108,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":1,"index":2717},"to":{"krate":0,"index":760}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135307,"byte_end":135312,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":792},"to":{"krate":0,"index":760}},{"span":{"file_name":"C:\\Users\\paulg\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tungstenite-0.13.0\\src\\util.rs","byte_start":135825,"byte_end":135834,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":2,"index":34532},"to":{"krate":0,"index":767}}]}